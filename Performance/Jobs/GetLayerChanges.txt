static void GetLayerChanges(Args _args)
{
    TextBuffer          tb = new TextBuffer();
    UtilIdElements        utilElements;
    UtilIdElements        utilElementsEx;
    
    UtilEntryLevel      currentLevel = UtilEntryLevel::usr;

	
    SysModelElement element, childElement;
    SysModelElementData elementData, childElementData;
    SysModelElementType elementType;
    SysModelLayer layer;
    SysModelManifest manifest;
    ;
    tb.appendText(strFmt("All elements in %1\n", currentLevel));
    while select count(RecId) from element
       // where element.ParentId == 0
    join elementData
        where elementData.ModelElement == element.RecId
    join Name from elementType    
        group by Name
        where elementType.RecId == element.ElementType
    join Name from manifest    
        group by Name
        where manifest.RecId == elementData.ModelId
    join layer    
        group by Layer
        where layer.RecId == elementData.Layer &&
              layer.Layer == currentLevel
    {
        tb.appendText(strFmt("%1\t%2\t%3\t%4\n", layer.Layer, manifest.Name, elementType.Name, element.RecId));
    }
    
    tb.appendText(strFmt("New elements in %1\n", currentLevel));
    tb.appendText(strFmt("%1\t%2\t%3\t%4\n", "Layer", "Model", "Type", "Count"));

    while select count(RecId) from utilElements
        group by utilLevel, recordType
        where utilElements.utilLevel == currentLevel 
        /*
        &&    (utilElements.recordType == UtilElementType::Class ||
              utilElements.recordType == UtilElementType::Table ||
              utilElements.recordType == UtilElementType::SSRSReport ||
              utilElements.recordType == UtilElementType::Form)
        */
     //   && utilElements.name like 'aa*'
    join element    
        where element.AxId == utilElements.id
            && element.ParentId == 0
            && utilElements.id != 0
    join elementData
        where elementData.ModelElement == element.RecId    
    join Name from manifest    
        group by Name
        where manifest.RecId == elementData.ModelId    
    join layer    
        group by Layer
        where layer.RecId == elementData.Layer &&
              layer.Layer == currentLevel    
    notexists join utilElementsEx
        where utilElementsEx.recordType == utilElements.recordType &&
              utilElementsEx.name       == utilElements.name &&
              utilElementsEx.utilLevel < utilElements.utilLevel
    {
        tb.appendText(strFmt("%1\t%2\t%3\t%4\n", utilElements.utilLevel, manifest.Name, utilElements.recordType, utilElements.RecId));
    }
    tb.appendText(strFmt("Modified elements in %1\n", currentLevel));
    while select count(RecId) from utilElements
        group by utilLevel, recordType
        where utilElements.utilLevel == currentLevel 
        /*
        &&    (utilElements.recordType == UtilElementType::Class ||
              utilElements.recordType == UtilElementType::Table ||
              utilElements.recordType == UtilElementType::SSRSReport ||
              utilElements.recordType == UtilElementType::Form)
        */
    join element    
        where element.AxId == utilElements.id
         && element.ParentId == 0
            && utilElements.id != 0
    join elementData
        where elementData.ModelElement == element.RecId    
    join Name from manifest    
        group by Name
        where manifest.RecId == elementData.ModelId         
    join layer    
        group by Layer
        where layer.RecId == elementData.Layer &&
              layer.Layer == currentLevel        
    exists join utilElementsEx
        where utilElementsEx.recordType == utilElements.recordType &&
              utilElementsEx.name       == utilElements.name &&
              utilElementsEx.utilLevel < utilElements.utilLevel
    {
        tb.appendText(strFmt("%1\t%2\t%3\t%4\n", utilElements.utilLevel, manifest.Name, utilElements.recordType, utilElements.RecId));
    }
    BOX::info('Press OK to copy to clipboard');
    tb.toClipboard();
}
