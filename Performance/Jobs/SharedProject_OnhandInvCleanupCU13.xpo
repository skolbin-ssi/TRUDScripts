Exportfile for AOT version 1.0 or later
Formatversion: 1

***Element: QUE

; Microsoft Dynamics AX Query: InventCleanupWHSInventSum unloaded
; --------------------------------------------------------------------------------
VERSION 31

QUERY #InventCleanupWHSInventSum
  PROPERTIES
    Name                #InventCleanupWHSInventSum
    Version             #134
    NextUniqueId        #1005
    Origin              #{558C888D-E22A-4A71-9A94-A16F8FAA3DF7}
  ENDPROPERTIES
  
  METHODS
    SOURCE #classDeclaration
      #public class QueryRun extends ObjectRun
      #{
      #}
    ENDSOURCE
  ENDMETHODS
  BLOCKS
    BLOCK #InventSum
      PROPERTIES
        Name                #InventSum
        Table               #InventSum
        UniqueId            #1000
        FetchMode           #1:1
        Update              #Yes
        ConcurrencyModel    #Optimistic
      ENDPROPERTIES
      
      FIELDLIST
        PROPERTIES
        ENDPROPERTIES
        
      ENDFIELDLIST
      SORTING
      ENDSORTING
      LINES
        LINE #ItemId
        PROPERTIES
          Name                #ItemId
          Table               #InventSum
          Field               #ItemId
        ENDPROPERTIES
        
        LINE #modifiedDateTime
        PROPERTIES
          Name                #ModifiedDateTimeFilter
          Table               #InventSum
          Field               #modifiedDateTime
          Status              #Hide
        ENDPROPERTIES
        
        LINE #Closed
        PROPERTIES
          Name                #Closed
          Table               #InventSum
          Field               #Closed
          Value               #Yes
          Status              #Lock
        ENDPROPERTIES
        
      ENDLINES
      BLOCKS
        BLOCK #InventTable
          PROPERTIES
            Name                #InventTable
            Table               #InventTable
            UniqueId            #1001
            FetchMode           #1:1
          ENDPROPERTIES
          
          FIELDLIST
            PROPERTIES
            ENDPROPERTIES
            
          ENDFIELDLIST
          SORTING
          ENDSORTING
          LINES
          ENDLINES
          BLOCKS
            BLOCK #EcoResProduct
              PROPERTIES
                Name                #EcoResProduct
                Table               #EcoResProduct
                UniqueId            #1003
                FetchMode           #1:1
              ENDPROPERTIES
              
              FIELDLIST
                PROPERTIES
                  Dynamic             #No
                ENDPROPERTIES
                
              ENDFIELDLIST
              SORTING
              ENDSORTING
              LINES
                LINE #DisplayProductNumber
                PROPERTIES
                  Name                #DisplayProductNumber
                  Table               #EcoResProduct
                  Field               #DisplayProductNumber
                ENDPROPERTIES
                
              ENDLINES
              BLOCKS
              ENDBLOCKS
              ASSOCIATIONS
                ASSOCIATION
                  JOINDATASOURCE #InventTable
                  FOREIGNKEYRELATION #EcoResProduct
              ENDASSOCIATIONS
            ENDBLOCK
            BLOCK #WHSInventEnabled
              PROPERTIES
                Name                #WHSInventEnabled
                Table               #WHSInventEnabled
                UniqueId            #1004
                FetchMode           #1:1
                JoinMode            #ExistsJoin
              ENDPROPERTIES
              
              FIELDLIST
                PROPERTIES
                  Dynamic             #No
                ENDPROPERTIES
                
              ENDFIELDLIST
              SORTING
              ENDSORTING
              LINES
              ENDLINES
              BLOCKS
              ENDBLOCKS
              ASSOCIATIONS
                ASSOCIATION
                  JOINDATASOURCE #InventTable
                  MASTERFIELD  #ItemId
                  DETAILSFIELD #ItemId
              ENDASSOCIATIONS
            ENDBLOCK
          ENDBLOCKS
          ASSOCIATIONS
            ASSOCIATION
              JOINDATASOURCE #InventSum
              FOREIGNKEYRELATION #InventTable
          ENDASSOCIATIONS
        ENDBLOCK
        BLOCK #InventDim
          PROPERTIES
            Name                #InventDim
            Table               #InventDim
            UniqueId            #1002
            FetchMode           #1:1
          ENDPROPERTIES
          
          FIELDLIST
            PROPERTIES
            ENDPROPERTIES
            
          ENDFIELDLIST
          SORTING
          ENDSORTING
          LINES
            LINE #InventSiteId
            PROPERTIES
              Name                #InventSiteId
              Table               #InventDim
              Field               #InventSiteId
            ENDPROPERTIES
            
          ENDLINES
          BLOCKS
          ENDBLOCKS
          ASSOCIATIONS
            ASSOCIATION
              JOINDATASOURCE #InventSum
              FOREIGNKEYRELATION #InventDim
          ENDASSOCIATIONS
        ENDBLOCK
      ENDBLOCKS
      GROUPBY
      ENDGROUPBY
      HAVING
      ENDHAVING
      ORDERBY
      ENDORDERBY
    ENDBLOCK
  ENDBLOCKS
  DEPENDENTS
  ENDDEPENDENTS
  COMPOSITEQUERIES
  ENDCOMPOSITEQUERIES
ENDQUERY


***Element: QUE

; Microsoft Dynamics AX Query: InventCleanupAllClosedInventSum unloaded
; --------------------------------------------------------------------------------
VERSION 31

QUERY #InventCleanupAllClosedInventSum
  PROPERTIES
    Name                #InventCleanupAllClosedInventSum
    Version             #76
    NextUniqueId        #1004
    Origin              #{E5B46EC1-ECEC-4A8F-AEF1-EDFAA5E72218}
  ENDPROPERTIES
  
  METHODS
    SOURCE #classDeclaration
      #public class QueryRun extends ObjectRun
      #{
      #}
    ENDSOURCE
  ENDMETHODS
  BLOCKS
    BLOCK #InventSum
      PROPERTIES
        Name                #InventSum
        Table               #InventSum
        UniqueId            #1000
        FetchMode           #1:1
        Update              #Yes
        ConcurrencyModel    #Optimistic
      ENDPROPERTIES
      
      FIELDLIST
        PROPERTIES
        ENDPROPERTIES
        
      ENDFIELDLIST
      SORTING
      ENDSORTING
      LINES
        LINE #ItemId
        PROPERTIES
          Name                #ItemId
          Table               #InventSum
          Field               #ItemId
        ENDPROPERTIES
        
        LINE #Closed
        PROPERTIES
          Name                #Closed
          Table               #InventSum
          Field               #Closed
          Value               #Yes
          Status              #Lock
        ENDPROPERTIES
        
        LINE #modifiedDateTime
        PROPERTIES
          Name                #ModifiedDateTimeFilter
          Table               #InventSum
          Field               #modifiedDateTime
          Status              #Hide
        ENDPROPERTIES
        
      ENDLINES
      BLOCKS
        BLOCK #InventTable
          PROPERTIES
            Name                #InventTable
            Table               #InventTable
            UniqueId            #1001
            FetchMode           #1:1
          ENDPROPERTIES
          
          FIELDLIST
            PROPERTIES
              Dynamic             #No
            ENDPROPERTIES
            
          ENDFIELDLIST
          SORTING
          ENDSORTING
          LINES
          ENDLINES
          BLOCKS
            BLOCK #EcoResProduct
              PROPERTIES
                Name                #EcoResProduct
                Table               #EcoResProduct
                UniqueId            #1002
                FetchMode           #1:1
              ENDPROPERTIES
              
              FIELDLIST
                PROPERTIES
                  Dynamic             #No
                ENDPROPERTIES
                
              ENDFIELDLIST
              SORTING
              ENDSORTING
              LINES
                LINE #DisplayProductNumber
                PROPERTIES
                  Name                #DisplayProductNumber
                  Table               #EcoResProduct
                  Field               #DisplayProductNumber
                ENDPROPERTIES
                
              ENDLINES
              BLOCKS
              ENDBLOCKS
              ASSOCIATIONS
                ASSOCIATION
                  JOINDATASOURCE #InventTable
                  FOREIGNKEYRELATION #EcoResProduct
              ENDASSOCIATIONS
            ENDBLOCK
          ENDBLOCKS
          ASSOCIATIONS
            ASSOCIATION
              JOINDATASOURCE #InventSum
              FOREIGNKEYRELATION #InventTable
          ENDASSOCIATIONS
        ENDBLOCK
        BLOCK #InventDim
          PROPERTIES
            Name                #InventDim
            Table               #InventDim
            UniqueId            #1003
            FetchMode           #1:1
          ENDPROPERTIES
          
          FIELDLIST
            PROPERTIES
            ENDPROPERTIES
            
          ENDFIELDLIST
          SORTING
          ENDSORTING
          LINES
          ENDLINES
          BLOCKS
          ENDBLOCKS
          ASSOCIATIONS
            ASSOCIATION
              JOINDATASOURCE #InventSum
              FOREIGNKEYRELATION #InventDim
          ENDASSOCIATIONS
        ENDBLOCK
      ENDBLOCKS
      GROUPBY
      ENDGROUPBY
      HAVING
      ENDHAVING
      ORDERBY
      ENDORDERBY
    ENDBLOCK
  ENDBLOCKS
  DEPENDENTS
  ENDDEPENDENTS
  COMPOSITEQUERIES
  ENDCOMPOSITEQUERIES
ENDQUERY


***Element: QUE

; Microsoft Dynamics AX Query: InventCleanupTrackingInventSum unloaded
; --------------------------------------------------------------------------------
VERSION 31

QUERY #InventCleanupTrackingInventSum
  PROPERTIES
    Name                #InventCleanupTrackingInventSum
    Version             #123
    NextUniqueId        #1005
    Origin              #{CDC7DDA9-93FF-418B-9EDA-F136D9609622}
  ENDPROPERTIES
  
  METHODS
    SOURCE #classDeclaration
      #public class QueryRun extends ObjectRun
      #{
      #}
    ENDSOURCE
  ENDMETHODS
  BLOCKS
    BLOCK #InventSum
      PROPERTIES
        Name                #InventSum
        Table               #InventSum
        UniqueId            #1000
        FetchMode           #1:1
        Update              #Yes
        ConcurrencyModel    #Optimistic
      ENDPROPERTIES
      
      FIELDLIST
        PROPERTIES
        ENDPROPERTIES
        
      ENDFIELDLIST
      SORTING
      ENDSORTING
      LINES
        LINE #ItemId
        PROPERTIES
          Name                #ItemId
          Table               #InventSum
          Field               #ItemId
        ENDPROPERTIES
        
        LINE #modifiedDateTime
        PROPERTIES
          Name                #ModifiedDateTimeFilter
          Table               #InventSum
          Field               #modifiedDateTime
          Status              #Hide
        ENDPROPERTIES
        
        LINE #Closed
        PROPERTIES
          Name                #Closed
          Table               #InventSum
          Field               #Closed
          Value               #Yes
          Status              #Lock
        ENDPROPERTIES
        
      ENDLINES
      BLOCKS
        BLOCK #InventTable
          PROPERTIES
            Name                #InventTable
            Table               #InventTable
            UniqueId            #1001
            FetchMode           #1:1
          ENDPROPERTIES
          
          FIELDLIST
            PROPERTIES
              Dynamic             #No
            ENDPROPERTIES
            
          ENDFIELDLIST
          SORTING
          ENDSORTING
          LINES
          ENDLINES
          BLOCKS
            BLOCK #EcoResProduct
              PROPERTIES
                Name                #EcoResProduct
                Table               #EcoResProduct
                UniqueId            #1003
                FetchMode           #1:1
              ENDPROPERTIES
              
              FIELDLIST
                PROPERTIES
                  Dynamic             #No
                ENDPROPERTIES
                
              ENDFIELDLIST
              SORTING
              ENDSORTING
              LINES
                LINE #DisplayProductNumber
                PROPERTIES
                  Name                #DisplayProductNumber
                  Table               #EcoResProduct
                  Field               #DisplayProductNumber
                ENDPROPERTIES
                
              ENDLINES
              BLOCKS
              ENDBLOCKS
              ASSOCIATIONS
                ASSOCIATION
                  JOINDATASOURCE #InventTable
                  FOREIGNKEYRELATION #EcoResProduct
              ENDASSOCIATIONS
            ENDBLOCK
            BLOCK #WHSInventEnabled
              PROPERTIES
                Name                #WHSInventEnabled
                Table               #WHSInventEnabled
                UniqueId            #1004
                FetchMode           #1:1
                JoinMode            #NoExistsJoin
              ENDPROPERTIES
              
              FIELDLIST
                PROPERTIES
                  Dynamic             #No
                ENDPROPERTIES
                
              ENDFIELDLIST
              SORTING
              ENDSORTING
              LINES
              ENDLINES
              BLOCKS
              ENDBLOCKS
              ASSOCIATIONS
                ASSOCIATION
                  JOINDATASOURCE #InventTable
                  MASTERFIELD  #ItemId
                  DETAILSFIELD #ItemId
              ENDASSOCIATIONS
            ENDBLOCK
          ENDBLOCKS
          ASSOCIATIONS
            ASSOCIATION
              JOINDATASOURCE #InventSum
              FOREIGNKEYRELATION #InventTable
          ENDASSOCIATIONS
        ENDBLOCK
        BLOCK #InventDim
          PROPERTIES
            Name                #InventDim
            Table               #InventDim
            UniqueId            #1002
            FetchMode           #1:1
          ENDPROPERTIES
          
          FIELDLIST
            PROPERTIES
            ENDPROPERTIES
            
          ENDFIELDLIST
          SORTING
          ENDSORTING
          LINES
            LINE #InventSiteId
            PROPERTIES
              Name                #InventSiteId
              Table               #InventDim
              Field               #InventSiteId
            ENDPROPERTIES
            
            LINE #RecId
            PROPERTIES
              Name                #TrackingDimensionFilter
              Table               #InventDim
              Field               #RecId
              Status              #Hide
            ENDPROPERTIES
            
          ENDLINES
          BLOCKS
          ENDBLOCKS
          ASSOCIATIONS
            ASSOCIATION
              JOINDATASOURCE #InventSum
              FOREIGNKEYRELATION #InventDim
          ENDASSOCIATIONS
        ENDBLOCK
      ENDBLOCKS
      GROUPBY
      ENDGROUPBY
      HAVING
      ENDHAVING
      ORDERBY
      ENDORDERBY
    ENDBLOCK
  ENDBLOCKS
  DEPENDENTS
  ENDDEPENDENTS
  COMPOSITEQUERIES
  ENDCOMPOSITEQUERIES
ENDQUERY


***Element: CLS

; Microsoft Dynamics AX Class: InventSumSummarizeContract unloaded
; --------------------------------------------------------------------------------
  CLSVERSION 1
  
  CLASS #InventSumSummarizeContract
    PROPERTIES
      Name                #InventSumSummarizeContract
      Origin              #{883F5805-F67F-4879-86AB-030C5186B369}
    ENDPROPERTIES
    
    METHODS
      SOURCE #classDeclaration
        #/// <summary>
        #///    The <c>InventSumSummarizeContract</c> class is the contract for <c>InventSumSummarizeService</c> service class.
        #/// </summary>
        #[DataContractAttribute]
        #public class InventSumSummarizeContract
        #{
        #    str          query;
        #    int          commitSize;
        #}
      ENDSOURCE
      SOURCE #new
        #protected void new()
        #{
        #    commitSize = 100;
        #}
      ENDSOURCE
      SOURCE #parmCommitSize
        #public int parmCommitSize(int _commitSize = commitSize)
        #{
        #    commitSize = _commitSize;
        #    return commitSize;
        #}
      ENDSOURCE
      SOURCE #parmQuery
        #[DataMemberAttribute, AifQueryTypeAttribute('_query', querystr(InventSumSummarize))]
        #public str parmQuery(str _query = query)
        #{
        #    query = _query;
        #    return query;
        #}
      ENDSOURCE
      SOURCE #construct
        #public static InventSumSummarizeContract construct()
        #{
        #    return new InventSumSummarizeContract();
        #}
      ENDSOURCE
    ENDMETHODS
  ENDCLASS

***Element: CLS

; Microsoft Dynamics AX Class: InventSumSummarizeController unloaded
; --------------------------------------------------------------------------------
  CLSVERSION 1
  
  CLASS #InventSumSummarizeController
    PROPERTIES
      Name                #InventSumSummarizeController
      Extends             #SysOperationServiceController
      Origin              #{2BD63524-3B0D-4974-9BA1-3388F4856334}
    ENDPROPERTIES
    
    METHODS
      SOURCE #classDeclaration
        #/// <summary>
        #///    The <c>InventSumSummarizeController</c> class acts as a controller for the
        #///    <c>InventSumSummarizeService</c> service.
        #/// </summary>
        #public class InventSumSummarizeController extends SysOperationServiceController
        #{
        #}
      ENDSOURCE
      SOURCE #construct
        #public static SysOperationController construct(Args _args)
        #{
        #    SysOperationController controller;
        #
        #    controller = new InventSumSummarizeController(classstr(InventSumSummarizeService),
        #                                                  methodstr(InventSumSummarizeService, summarize),
        #                                                  SysOperationExecutionMode::Synchronous);
        #    controller.parmArgs(_args);
        #
        #    return controller;
        #}
      ENDSOURCE
      SOURCE #main
        #public static void main(Args _args)
        #{
        #    InventSumSummarizeController::construct(_args).startOperation();
        #}
      ENDSOURCE
    ENDMETHODS
  ENDCLASS

***Element: CLS

; Microsoft Dynamics AX Class: InventSumSummarizeService unloaded
; --------------------------------------------------------------------------------
  CLSVERSION 1
  
  CLASS #InventSumSummarizeService
    PROPERTIES
      Name                #InventSumSummarizeService
      RunOn               #Server
      Origin              #{50EED94A-3FF4-48BA-988B-B9654B527AF6}
    ENDPROPERTIES
    
    METHODS
      SOURCE #classDeclaration
        #/// <summary>
        #///    The <c>InventSumSummarizeService</c> class provides the service operation for
        #///    aggregation of non-quantitative associated <c>InventSum</c> records by financial dimensions.
        #/// </summary>
        #public class InventSumSummarizeService
        #{
        #}
      ENDSOURCE
      SOURCE #findOrInsertInventSum
        #/// <summary>
        #///     Finds or creates <c>InventSum</c> record that matches the specified parameters.
        #/// </summary>
        #/// <param name="_itemId">
        #///     An item ID associated with <c>InventSum</c> record.
        #/// </param>
        #/// <param name="_inventDimId">
        #///     The inventory dimension ID to query for.
        #/// </param>
        #/// <returns>
        #///     An <c>InventSum</c> record.
        #/// </returns>
        #protected InventSum findOrInsertInventSum(ItemId _itemId, InventDimId _inventDimId)
        #{
        #    InventSum   inventSumFinancial = InventSum::find(_itemId, _inventDimId, true);
        #
        #    if (!inventSumFinancial.RecId)
        #    {
        #        return this.insertClosedInventSum(_itemId, _inventDimId);
        #    }
        #
        #    return inventSumFinancial;
        #}
      ENDSOURCE
      SOURCE #insertClosedInventSum
        #/// <summary>
        #///    Inserts a new closed <c>InventSum</c> record.
        #/// </summary>
        #/// <param name="_itemId">
        #///    The item ID to insert an <c>InventSum</c> record for.
        #/// </param>
        #/// <param name="_inventDimId">
        #///    The inventory dimension ID to insert an <c>InventSum</c> record for.
        #/// </param>
        #/// <returns>
        #///    Inserted <c>InventSum</c> record.
        #/// </returns>
        #protected InventSum insertClosedInventSum(ItemId _itemId, InventDimId _inventDimId)
        #{
        #    InventSum   newInventSum;
        #
        #    newInventSum.initValue();
        #    newInventSum.ItemId         = _itemId;
        #    newInventSum.InventDimId    = _inventDimId;
        #
        #    newInventSum.insert();
        #
        #    return newInventSum;
        #}
      ENDSOURCE
      SOURCE #lookupFinancialInventDim
        #/// <summary>
        #///     Looks up for inventory dimension values associated with an <c>InventDim</c> record where no non-financial dimension values are specified.
        #/// </summary>
        #/// <param name="_itemId">
        #///     An item ID associated with <c>InventSum</c> record.
        #/// </param>
        #/// <param name="_origInventDim">
        #///     The <c>InventDim</c> record containing both financial and non-finanial dimension values.
        #/// </param>
        #/// <returns>
        #///     An <c>InventDim</c> record without non-finanial dimension values.
        #/// </returns>
        #protected InventDim lookupFinancialInventDim(ItemId    _itemId,
        #                                             InventDim _origInventDim)
        #{
        #    InventDim   inventDimFinancial;
        #
        #    inventDimFinancial.copyDimFinancial(InventDimGroupSetup::newItemId(_itemId), _origInventDim);
        #    return InventDim::findOrCreate(inventDimFinancial);
        #}
      ENDSOURCE
      SOURCE #readInventDim
        #/// <summary>
        #///    Reads an <c>InventDim</c> record from the specified query.
        #/// </summary>
        #/// <param name="_queryRun">
        #///    The <c>QueryRun</c> object to read from.
        #/// </param>
        #/// <returns>
        #///    An <c>InventDim</c> record.
        #/// </returns>
        #protected InventDim readInventDim(QueryRun _queryRun)
        #{
        #    return _queryRun.get(tableNum(InventDim));
        #}
      ENDSOURCE
      SOURCE #readInventSum
        #/// <summary>
        #///    Reads an <c>InventSum</c> record from the specified query.
        #/// </summary>
        #/// <param name="_queryRun">
        #///    The <c>QueryRun</c> object to read from.
        #/// </param>
        #/// <returns>
        #///    An <c>InventSum</c> record.
        #/// </returns>
        #protected InventSum readInventSum(QueryRun _queryRun)
        #{
        #    return _queryRun.get(tableNum(InventSum));
        #}
      ENDSOURCE
      SOURCE #showProgress
        #/// <summary>
        #///    Creates and displays a progress bar.
        #/// </summary>
        #/// <returns>
        #///    A <c>SysOperationProgress</c> progress bar object.
        #/// </returns>
        #protected SysOperationProgress showProgress()
        #{
        #    #AviFiles
        #
        #    SysOperationProgress    progress = new SysOperationProgress(0);
        #
        #    progress.setAnimation(#AviFileDel);
        #    progress.setCaption("@SYS4006021");
        #    progress.update(true);
        #
        #    return progress;
        #}
      ENDSOURCE
      SOURCE #summarize
        #/// <summary>
        #///    Performs an aggregation of cost value for non-quantitative associated <c>InventSum</c> records by financial dimensions.
        #///    and closes <c>InventSum</c> records with physical, not financial dimensions post cost value transfer
        #/// </summary>
        #/// <param name="_dataContract">
        #///    A <c>InventSumSummarizeContract</c> object specifying the <c>InventSum</c> records that should be cleaned up.
        #/// </param>
        #[SysEntryPointAttribute]
        #public void summarize(InventSumSummarizeContract _dataContract)
        #{
        #    #OCCRetryCount
        #
        #    InventSum               inventSum;
        #    InventDim               inventDim;
        #    QueryRun                queryRun;
        #    Query                   query;
        #    SysOperationProgress    progress;
        #
        #    int                     initialTtsLevel;
        #    int                     summarizedInTransactionScope = 0;
        #    int                     summarizedTotalCounter = 0;
        #
        #    query = new Query(SysOperationHelper::base64Decode(_dataContract.parmQuery()));
        #
        #    queryRun = new QueryRun(query);
        #    progress = this.showProgress();
        #
        #    try
        #    {
        #        initialTtsLevel = appl.ttsLevel();
        #        summarizedInTransactionScope = 0;
        #
        #        while (queryRun.next())
        #        {
        #            inventSum = this.readInventSum(queryRun);
        #            inventDim = this.readInventDim(queryRun);
        #
        #            if ((appl.ttsLevel() - initialTtsLevel) == 0)
        #            {
        #                ttsbegin;
        #            }
        #
        #            if (this.summarizeInventSum(inventSum, inventDim))
        #            {
        #                summarizedInTransactionScope++;
        #            }
        #
        #            if (summarizedInTransactionScope >= _dataContract.parmCommitSize() && (appl.ttsLevel() - initialTtsLevel) == 1)
        #            {
        #                ttscommit;
        #                summarizedTotalCounter += summarizedInTransactionScope;
        #                summarizedInTransactionScope = 0;
        #                ttsbegin;
        #            }
        #        }
        #
        #        if ((appl.ttsLevel() - initialTtsLevel) == 1)
        #        {
        #            ttscommit;
        #            summarizedTotalCounter += summarizedInTransactionScope;
        #        }
        #        info(strFmt("@SYP4882190", summarizedTotalCounter));
        #    }
        #    catch (Exception::Deadlock)
        #    {
        #        queryRun.reset();
        #        retry;
        #    }
        #    catch (Exception::DuplicateKeyException)
        #    {
        #        if (appl.ttsLevel() == 0)
        #        {
        #            if (xSession::currentRetryCount() >= #RetryNum)
        #            {
        #                throw Exception::DuplicateKeyExceptionNotRecovered;
        #            }
        #            else
        #            {
        #                queryRun.reset();
        #                retry;
        #            }
        #        }
        #        else
        #        {
        #            throw Exception::DuplicateKeyException;
        #        }
        #    }
        #    catch (Exception::UpdateConflict)
        #    {
        #        if (appl.ttsLevel() == 0)
        #        {
        #            if (xSession::currentRetryCount() >= #RetryNum)
        #            {
        #                throw Exception::UpdateConflictNotRecovered;
        #            }
        #            else
        #            {
        #                queryRun.reset();
        #                retry;
        #            }
        #        }
        #        else
        #        {
        #            throw Exception::UpdateConflict;
        #        }
        #    }
        #    progress.kill();
        #}
      ENDSOURCE
      SOURCE #summarizeInventSum
        #/// <summary>
        #///    Summarizes the specified <c>InventSum</c> record.
        #/// </summary>
        #/// <param name="_inventSum">
        #///    The <c>InventSum</c> record to be summarized.
        #/// </param>
        #/// <param name="_inventDim">
        #///    The <c>InventDim</c> record associated with the <c>InventSum</c> record.
        #/// </param>
        #/// <returns>
        #///    true if <c>InventSum</c> record was summarized; otherwise, false.
        #/// </returns>
        #protected boolean summarizeInventSum(InventSum _inventSum, InventDim _inventDim)
        #{
        #    InventDim     inventDimFinancial;
        #    InventSum     inventSumFinancial;
        #
        #    // aggregate physical & financial value by financial dimensions for non-quantitative records
        #    inventDimFinancial = this.lookupFinancialInventDim(_inventSum.ItemId, _inventDim);
        #
        #    if (InventDim::isInventDimEqual(inventDimFinancial, _inventDim) ||
        #        !_inventSum.isAllQtyFieldsZero()                            ||
        #         _inventSum.hasOpenTransactions())
        #    {
        #        return false;
        #    }
        #    inventSumFinancial = this.findOrInsertInventSum(_inventSum.ItemId, inventDimFinancial.InventDimId);
        #    this.transferInventSumValue(_inventSum, inventSumFinancial);
        #
        #    return true;
        #}
      ENDSOURCE
      SOURCE #transferInventSumValue
        #/// <summary>
        #///     Transfers physical and financial value from original <c>InventSum</c> record to <c>InventSum</c> record tracked by financial dimensions
        #/// </summary>
        #/// <param name="_inventSumFrom">
        #///     Original <c>InventSum</c> record which is expected to be deleted post transfer
        #/// </param>
        #/// <param name="_inventSumTo">
        #///     <c>InventSum</c> record that aggregates posted and physical values per financial dimensions
        #/// </param>
        #protected void transferInventSumValue(InventSum _inventSumFrom, InventSum _inventSumTo)
        #{
        #    _inventSumTo.PostedValue            += _inventSumFrom.PostedValue;
        #    _inventSumTo.PhysicalValue          += _inventSumFrom.PhysicalValue;
        #    _inventSumTo.PostedValueSecCur_RU   += _inventSumFrom.PostedValueSecCur_RU;
        #    _inventSumTo.PhysicalValueSecCur_RU += _inventSumFrom.PhysicalValueSecCur_RU;
        #
        #    _inventSumFrom.PostedValue            -= _inventSumFrom.PostedValue;
        #    _inventSumFrom.PhysicalValue          -= _inventSumFrom.PhysicalValue;
        #    _inventSumFrom.PostedValueSecCur_RU   -= _inventSumFrom.PostedValueSecCur_RU;
        #    _inventSumFrom.PhysicalValueSecCur_RU -= _inventSumFrom.PhysicalValueSecCur_RU;
        #
        #    _inventSumFrom.update();
        #    _inventSumTo.update();
        #}
      ENDSOURCE
    ENDMETHODS
  ENDCLASS

***Element: CLS

; Microsoft Dynamics AX Class: InventCleanupAllClosedInventSumContract unloaded
; --------------------------------------------------------------------------------
  CLSVERSION 1
  
  CLASS #InventCleanupAllClosedInventSumContract
    PROPERTIES
      Name                #InventCleanupAllClosedInventSumContract
      Extends             #InventCleanupInventSumContract
      Origin              #{B3095888-AA90-4D75-A8E3-7773A9988E41}
    ENDPROPERTIES
    
    METHODS
      SOURCE #classDeclaration
        #/// <summary>
        #///    The <c>InventCleanupAllClosedInventSumContract</c> class is the contract for <c>InventCleanupAllClosedInventSumService</c> service class.
        #/// </summary>
        #[DataContractAttribute]
        #class InventCleanupAllClosedInventSumContract extends InventCleanupInventSumContract
        #{
        #}
      ENDSOURCE
      SOURCE #new
        #public void new()
        #{
        #    super();
        #}
      ENDSOURCE
      SOURCE #parmCommitSize
        #public int parmCommitSize(int _commitSize = commitSize)
        #{
        #    return super(_commitSize);
        #}
      ENDSOURCE
      SOURCE #parmDeleteWhenNotUpdatedForDays
        #[DataMemberAttribute,
        #SysOperationLabelAttribute(literalStr("@SYS4006023")),
        #SysOperationHelpTextAttribute(literalStr("@SYS4006024"))]
        #public PositiveDays parmDeleteWhenNotUpdatedForDays(PositiveDays _deleteWhenNotUpdatedForDays = deleteWhenNotUpdatedForDays)
        #{
        #    return super(_deleteWhenNotUpdatedForDays);
        #}
      ENDSOURCE
      SOURCE #parmQuery
        #[DataMemberAttribute,
        #    AifQueryTypeAttribute('_query', queryStr(InventCleanupAllClosedInventSum))
        #]
        #public str parmQuery(str _query = query)
        #{
        #    query = _query;
        #    return query;
        #}
      ENDSOURCE
    ENDMETHODS
  ENDCLASS

***Element: CLS

; Microsoft Dynamics AX Class: InventCleanupAllClosedInventSumService unloaded
; --------------------------------------------------------------------------------
  CLSVERSION 1
  
  CLASS #InventCleanupAllClosedInventSumService
    PROPERTIES
      Name                #InventCleanupAllClosedInventSumService
      Extends             #InventCleanupInventSumService
      RunOn               #Server
      Origin              #{C017E05C-2845-45C1-98E2-9B5FE7893785}
    ENDPROPERTIES
    
    METHODS
      SOURCE #classDeclaration
        #/// <summary>
        #///    The <c>InventCleanupAllClosedInventSumService</c> class provides the service operation for
        #///    cleaning up all closed <c>InventSum</c> records.
        #/// </summary>
        #class InventCleanupAllClosedInventSumService extends InventCleanupInventSumService
        #{
        #}
      ENDSOURCE
      SOURCE #cleanup
        #/// <summary>
        #///    Cleans up all closed <c>InventSum</c> records specified by the
        #///    provided <c>InventCleanupAllClosedInventSumContract</c> contract.
        #/// </summary>
        #/// <param name="_dataContract">
        #///    A <c>InventCleanupAllClosedInventSumContract</c> object specifying the <c>InventSum</c> records
        #///    that should be cleaned up.
        #/// </param>
        #[SysEntryPointAttribute]
        #public void cleanup(InventCleanupAllClosedInventSumContract _dataContract)
        #{
        #    #OCCRetryCount
        #
        #    InventSum               inventSum;
        #    InventDim               inventDim;
        #    QueryRun                queryRun;
        #    Query                   query;
        #    SysOperationProgress    progress;
        #
        #    int                     initialTtsLevel;
        #    int                     cleanedUpInTransactionScope = 0;
        #    int                     cleanupCounter = 0;
        #
        #    query = new Query(SysOperationHelper::base64Decode(_dataContract.parmQuery()));
        #
        #    this.addModifiedDateTimeFilter(query, _dataContract.parmDeleteWhenNotUpdatedForDays());
        #
        #    queryRun = new QueryRun(query);
        #
        #    progress = this.showProgress();
        #
        #    try
        #    {
        #        initialTtsLevel = appl.ttsLevel();
        #        cleanedUpInTransactionScope = 0;
        #
        #        while (queryRun.next())
        #        {
        #            inventSum = this.readInventSum(queryRun);
        #            inventDim = this.readInventDim(queryRun);
        #
        #            if (this.getTtsLevel(initialTtsLevel) == 0)
        #            {
        #                ttsbegin;
        #            }
        #
        #            if (this.cleanUpInventSum(inventSum, inventDim))
        #            {
        #                cleanedUpInTransactionScope++;
        #            }
        #
        #            if (cleanedUpInTransactionScope >= _dataContract.parmCommitSize() &&
        #                this.getTtsLevel(initialTtsLevel) == 1)
        #            {
        #                ttscommit;
        #                cleanupCounter += cleanedUpInTransactionScope;
        #                cleanedUpInTransactionScope = 0;
        #                ttsbegin;
        #            }
        #        }
        #
        #        if (this.getTtsLevel(initialTtsLevel) == 1)
        #        {
        #            ttscommit;
        #            cleanupCounter += cleanedUpInTransactionScope;
        #        }
        #
        #        info(strFmt("@SYS4006018", cleanupCounter));
        #    }
        #    catch (Exception::Deadlock)
        #    {
        #        queryRun.reset();
        #        retry;
        #    }
        #    catch (Exception::DuplicateKeyException)
        #    {
        #        if (appl.ttsLevel() == 0)
        #        {
        #            if (xSession::currentRetryCount() >= #RetryNum)
        #            {
        #                throw Exception::DuplicateKeyExceptionNotRecovered;
        #            }
        #            else
        #            {
        #                queryRun.reset();
        #                retry;
        #            }
        #        }
        #        else
        #        {
        #            throw Exception::DuplicateKeyException;
        #        }
        #    }
        #    catch (Exception::UpdateConflict)
        #    {
        #        if (appl.ttsLevel() == 0)
        #        {
        #            if (xSession::currentRetryCount() >= #RetryNum)
        #            {
        #                throw Exception::UpdateConflictNotRecovered;
        #            }
        #            else
        #            {
        #                queryRun.reset();
        #                retry;
        #            }
        #        }
        #        else
        #        {
        #            throw Exception::UpdateConflict;
        #        }
        #    }
        #
        #    progress.kill();
        #}
      ENDSOURCE
      SOURCE #cleanUpInventSum
        #/// <summary>
        #///    Cleans up the specified <c>InventSum</c> record.
        #/// </summary>
        #/// <param name="_inventSum">
        #///    The <c>InventSum</c> record to be cleaned up.
        #/// </param>
        #/// <param name="_inventDim">
        #///    The <c>InventDim</c> record associated with the <c>InventSum</c> record.
        #/// </param>
        #/// <returns>
        #///    true if <c>InventSum</c> record was cleaned up; otherwise, false.
        #/// </returns>
        #protected boolean cleanUpInventSum(InventSum _inventSum, InventDim _inventDim)
        #{
        #    if (!this.validateInventSumDelete(_inventSum))
        #    {
        #        return false;
        #    }
        #
        #    this.deleteInventSum(_inventSum);
        #
        #    return true;
        #}
      ENDSOURCE
      SOURCE #getTtsLevel
        #private int getTtsLevel(int _initialTtsLevel)
        #{
        #    return appl.ttsLevel() - _initialTtsLevel;
        #}
      ENDSOURCE
    ENDMETHODS
  ENDCLASS

***Element: CLS

; Microsoft Dynamics AX Class: InventCleanupAllCloseInventSumController unloaded
; --------------------------------------------------------------------------------
  CLSVERSION 1
  
  CLASS #InventCleanupAllCloseInventSumController
    PROPERTIES
      Name                #InventCleanupAllCloseInventSumController
      Extends             #SysOperationServiceController
      Origin              #{2D1BF741-0A0B-4BB3-809D-9D44C9981C45}
    ENDPROPERTIES
    
    METHODS
      SOURCE #classDeclaration
        #/// <summary>
        #///    The <c>InventCleanupAllCloseInventSumController</c> class acts as a controller for the
        #///    <c>InventCleanupAllClosedInventSumService</c> service.
        #/// </summary>
        #public class InventCleanupAllCloseInventSumController extends SysOperationServiceController
        #{
        #}
      ENDSOURCE
      SOURCE #construct
        #/// <summary>
        #/// Creates a new instance of <c>InventCleanupAllCloseInventSumController</c> class.
        #/// </summary>
        #/// <param name="_args">
        #/// An instance of the <c>Args</c> class.
        #/// </param>
        #/// <returns>
        #/// A new instance of <c>InventCleanupAllCloseInventSumController</c> class.
        #/// </returns>
        #public static SysOperationController construct(Args _args)
        #{
        #    SysOperationController controller;
        #
        #    controller = new InventCleanupAllCloseInventSumController(
        #        classStr(InventCleanupAllClosedInventSumService),
        #        methodStr(InventCleanupAllClosedInventSumService, cleanup),
        #        SysOperationExecutionMode::Synchronous);
        #
        #    controller.parmArgs(_args);
        #
        #    return controller;
        #}
      ENDSOURCE
      SOURCE #main
        #public static void main(Args _args)
        #{
        #    InventCleanupAllCloseInventSumController::construct(_args).startOperation();
        #}
      ENDSOURCE
    ENDMETHODS
  ENDCLASS

***Element: CLS

; Microsoft Dynamics AX Class: InventCleanupInventSumContract unloaded
; --------------------------------------------------------------------------------
  CLSVERSION 1
  
  CLASS #InventCleanupInventSumContract
    PROPERTIES
      Name                #InventCleanupInventSumContract
      Origin              #{147204BE-D233-4C8D-B7A8-CEF75AB83741}
    ENDPROPERTIES
    
    METHODS
      SOURCE #classDeclaration
        #/// <summary>
        #///    The <c>InventCleanupTrackingInventSumContract</c> class is the contract for <c>InventCleanupTrackingInventSumService</c> service class.
        #/// </summary>
        #[DataContractAttribute]
        #class InventCleanupInventSumContract
        #{
        #    str             query;
        #    PositiveDays    deleteWhenNotUpdatedForDays;
        #    int             commitSize;
        #}
      ENDSOURCE
      SOURCE #new
        #public void new()
        #{
        #    commitSize = 100;
        #}
      ENDSOURCE
      SOURCE #parmCommitSize
        #public int parmCommitSize(int _commitSize = commitSize)
        #{
        #    commitSize = _commitSize;
        #    return commitSize;
        #}
      ENDSOURCE
      SOURCE #parmDeleteWhenNotUpdatedForDays
        #[DataMemberAttribute,
        #SysOperationLabelAttribute(literalStr("@SYS4006023")),
        #SysOperationHelpTextAttribute(literalStr("@SYS4006024"))]
        #public PositiveDays parmDeleteWhenNotUpdatedForDays(PositiveDays _deleteWhenNotUpdatedForDays = deleteWhenNotUpdatedForDays)
        #{
        #    deleteWhenNotUpdatedForDays = _deleteWhenNotUpdatedForDays;
        #
        #    return deleteWhenNotUpdatedForDays;
        #}
      ENDSOURCE
    ENDMETHODS
  ENDCLASS

***Element: CLS

; Microsoft Dynamics AX Class: InventCleanupInventSumService unloaded
; --------------------------------------------------------------------------------
  CLSVERSION 1
  
  CLASS #InventCleanupInventSumService
    PROPERTIES
      Name                #InventCleanupInventSumService
      RunOn               #Server
      Origin              #{CA9C0964-DD4D-404C-91F6-DE1AE0112AD4}
    ENDPROPERTIES
    
    METHODS
      SOURCE #addModifiedDateTimeFilter
        #/// <summary>
        #///    Applies a not updated within number of days filter to the <c>ModifiedDateTime</c> field on the <c>InventSum</c> table.
        #/// </summary>
        #/// <param name="_query">
        #///    A <c>Query</c> object containing a query range on the <c>ModifiedDateTime</c> field.
        #/// </param>
        #/// <param name="_deleteWhenNotUpdatedForDays">
        #///    The number of not updated days.
        #/// </param>
        #protected void addModifiedDateTimeFilter(Query _query, PositiveDays _deleteWhenNotUpdatedForDays)
        #{
        #    _query.dataSourceTable(tableNum(InventSum)).findRange(fieldNum(InventSum, ModifiedDateTime)).value(this.modifiedDateTimeQueryExpression(_deleteWhenNotUpdatedForDays));
        #}
        #
      ENDSOURCE
      SOURCE #classDeclaration
        #/// <summary>
        #///    The <c>InventCleanupInventSumService</c> class provides the service operation for
        #///    cleaning up closed tracking dimension associated <c>InventSum</c> records.
        #/// </summary>
        #public abstract class InventCleanupInventSumService
        #{
        #}
      ENDSOURCE
      SOURCE #cleanUpInventSum
        #/// <summary>
        #///    Cleans up the specified <c>InventSum</c> record.
        #/// </summary>
        #/// <param name="_inventSum">
        #///    The <c>InventSum</c> record to be cleaned up.
        #/// </param>
        #/// <param name="_inventDim">
        #///    The <c>InventDim</c> record associated with the <c>InventSum</c> record.
        #/// </param>
        #/// <returns>
        #///    true if <c>InventSum</c> record was cleaned up; otherwise, false.
        #/// </returns>
        #protected abstract boolean cleanUpInventSum(InventSum _inventSum, InventDim _inventDim)
        #{
        #}
      ENDSOURCE
      SOURCE #deleteInventSum
        #/// <summary>
        #///    Deletes the specified <c>InventSum</c> record.
        #/// </summary>
        #/// <param name="_inventSum">
        #///    The <c>InventSum</c> record to be deleted.
        #/// </param>
        #protected void deleteInventSum(InventSum _inventSum)
        #{
        #    _inventSum.delete();
        #}
      ENDSOURCE
      SOURCE #insertClosedInventSum
        #/// <summary>
        #///    Insert a new closed <c>InventSum</c> record.
        #/// </summary>
        #/// <param name="_itemId">
        #///    The item ID to insert an <c>InventSum</c> record for.
        #/// </param>
        #/// <param name="_inventDimId">
        #///    The inventory dimension ID to insert an <c>InventSum</c> record for.
        #/// </param>
        #protected void insertClosedInventSum(ItemId _itemId, InventDimId _inventDimId)
        #{
        #    InventSum   newInventSum;
        #
        #    newInventSum.initValue();
        #    newInventSum.ItemId         = _itemId;
        #    newInventSum.InventDimId    = _inventDimId;
        #
        #    newInventSum.insert();
        #}
      ENDSOURCE
      SOURCE #isInventSumExisting
        #/// <summary>
        #///    Queries whether an <c>InventSum</c> record exists matching the specified parameters.
        #/// </summary>
        #/// <param name="_itemId">
        #///    The item ID to query for.
        #/// </param>
        #/// <param name="_inventDimId">
        #///    The inventory dimension ID to query for.
        #/// </param>
        #/// <returns>
        #///    true if <c>InventSum</c> record exists; otherwise, false.
        #/// </returns>
        #protected boolean isInventSumExisting(ItemId _itemId, InventDimId _inventDimId)
        #{
        #    return InventSum::exist(_itemId, _inventDimId);
        #}
      ENDSOURCE
      SOURCE #modifiedDateTimeQueryExpression
        #protected str modifiedDateTimeQueryExpression(PositiveDays _deleteWhenNotUpdatedForDays)
        #{
        #    if (!_deleteWhenNotUpdatedForDays)
        #    {
        #        return '';
        #    }
        #
        #    return SysQuery::range(DateTimeUtil::minValue(), DateTimeUtil::addDays(DateTimeUtil::utcNow(), -_deleteWhenNotUpdatedForDays));
        #}
      ENDSOURCE
      SOURCE #readInventDim
        #/// <summary>
        #///    Reads an <c>InventDim</c> record from the specified query.
        #/// </summary>
        #/// <param name="_queryRun">
        #///    The <c>QueryRun</c> object to read from.
        #/// </param>
        #/// <returns>
        #///    An <c>InventDim</c> record.
        #/// </returns>
        #protected InventDim readInventDim(QueryRun _queryRun)
        #{
        #    return _queryRun.get(tableNum(InventDim));
        #}
      ENDSOURCE
      SOURCE #readInventSum
        #/// <summary>
        #///    Reads an <c>InventSum</c> record from the specified query.
        #/// </summary>
        #/// <param name="_queryRun">
        #///    The <c>QueryRun</c> object to read from.
        #/// </param>
        #/// <returns>
        #///    An <c>InventSum</c> record.
        #/// </returns>
        #protected InventSum readInventSum(QueryRun _queryRun)
        #{
        #    return _queryRun.get(tableNum(InventSum));
        #}
      ENDSOURCE
      SOURCE #readInventTable
        #/// <summary>
        #///    Reads an <c>InventTable</c> record from the specified query.
        #/// </summary>
        #/// <param name="_queryRun">
        #///    The <c>QueryRun</c> object to read from.
        #/// </param>
        #/// <returns>
        #///    An <c>InventTable</c> record.
        #/// </returns>
        #protected InventTable readInventTable(QueryRun _queryRun)
        #{
        #    return _queryRun.get(tableNum(InventTable));
        #}
      ENDSOURCE
      SOURCE #showProgress
        #/// <summary>
        #///    Creates and displays a progress bar.
        #/// </summary>
        #/// <returns>
        #///    A <c>SysOperationProgress</c> progress bar object.
        #/// </returns>
        #protected SysOperationProgress showProgress()
        #{
        #    #AviFiles
        #
        #    SysOperationProgress    progress;
        #
        #    progress = new SysOperationProgress(0);
        #
        #    progress.setAnimation(#AviFileDel);
        #    progress.setCaption("@SYS4006021");
        #    progress.update(true);
        #
        #    return progress;
        #}
      ENDSOURCE
      SOURCE #validateInventSumDelete
        #/// <summary>
        #///    Validates that the specified <c>InventSum</c> record may be deleted.
        #/// </summary>
        #/// <param name="_inventSum">
        #///    The <c>InventSum</c> record to validate.
        #/// </param>
        #/// <returns>
        #///    true if the <c>InventSum</c> record may be deleted; otherwise, false.
        #/// </returns>
        #protected boolean validateInventSumDelete(InventSum _inventSum)
        #{
        #    return _inventSum.validateDelete();
        #}
      ENDSOURCE
    ENDMETHODS
  ENDCLASS

***Element: CLS

; Microsoft Dynamics AX Class: InventCleanupTrackingInventSumContract unloaded
; --------------------------------------------------------------------------------
  CLSVERSION 1
  
  CLASS #InventCleanupTrackingInventSumContract
    PROPERTIES
      Name                #InventCleanupTrackingInventSumContract
      Extends             #InventCleanupInventSumContract
      Origin              #{D0739395-E7BD-4D3F-AEFB-DCDD61E0AA90}
    ENDPROPERTIES
    
    METHODS
      SOURCE #classDeclaration
        #/// <summary>
        #///    The <c>InventCleanupTrackingInventSumContract</c> class is the contract for <c>InventCleanupTrackingInventSumService</c> service class.
        #/// </summary>
        #[DataContractAttribute]
        #class InventCleanupTrackingInventSumContract extends InventCleanupInventSumContract
        #{
        #}
      ENDSOURCE
      SOURCE #new
        #public void new()
        #{
        #    super();
        #}
      ENDSOURCE
      SOURCE #parmCommitSize
        #public int parmCommitSize(int _commitSize = commitSize)
        #{
        #    return super(_commitSize);
        #}
      ENDSOURCE
      SOURCE #parmDeleteWhenNotUpdatedForDays
        #[DataMemberAttribute,
        #SysOperationLabelAttribute(literalStr("@SYS4006023")),
        #SysOperationHelpTextAttribute(literalStr("@SYS4006024"))]
        #public PositiveDays parmDeleteWhenNotUpdatedForDays(PositiveDays _deleteWhenNotUpdatedForDays = deleteWhenNotUpdatedForDays)
        #{
        #    return super(_deleteWhenNotUpdatedForDays);
        #}
      ENDSOURCE
      SOURCE #parmQuery
        #[DataMemberAttribute,
        #    AifQueryTypeAttribute('_query', queryStr(InventCleanupTrackingInventSum))
        #]
        #public str parmQuery(str _query = query)
        #{
        #    query = _query;
        #    return query;
        #}
      ENDSOURCE
    ENDMETHODS
  ENDCLASS

***Element: CLS

; Microsoft Dynamics AX Class: InventCleanupTrackingInventSumController unloaded
; --------------------------------------------------------------------------------
  CLSVERSION 1
  
  CLASS #InventCleanupTrackingInventSumController
    PROPERTIES
      Name                #InventCleanupTrackingInventSumController
      Extends             #SysOperationServiceController
      Origin              #{5D4A0C79-CF55-4DDD-8CAB-0B28BE67F96B}
    ENDPROPERTIES
    
    METHODS
      SOURCE #classDeclaration
        #/// <summary>
        #///    The <c>InventCleanupTrackingInventSumController</c> class acts as a controller for the
        #///    <c>InventCleanupTrackingInventSumService</c> service.
        #/// </summary>
        #public class InventCleanupTrackingInventSumController extends SysOperationServiceController
        #{
        #}
      ENDSOURCE
      SOURCE #construct
        #/// <summary>
        #/// Creates a new instance of <c>InventCleanupTrackingInventSumController</c> class.
        #/// </summary>
        #/// <param name="_args">
        #/// An instance of the <c>Args</c> class.
        #/// </param>
        #/// <returns>
        #/// A new instance of <c>InventCleanupTrackingInventSumController</c> class.
        #/// </returns>
        #public static SysOperationController construct(Args _args)
        #{
        #    SysOperationController controller;
        #
        #    controller = new InventCleanupTrackingInventSumController(
        #        classStr(InventCleanupTrackingInventSumService),
        #        methodStr(InventCleanupTrackingInventSumService, cleanup),
        #        SysOperationExecutionMode::Synchronous);
        #
        #    controller.parmArgs(_args);
        #
        #    return controller;
        #}
      ENDSOURCE
      SOURCE #main
        #public static void main(Args _args)
        #{
        #    InventCleanupTrackingInventSumController::construct(_args).startOperation();
        #}
      ENDSOURCE
    ENDMETHODS
  ENDCLASS

***Element: CLS

; Microsoft Dynamics AX Class: InventCleanupTrackingInventSumService unloaded
; --------------------------------------------------------------------------------
  CLSVERSION 1
  
  CLASS #InventCleanupTrackingInventSumService
    PROPERTIES
      Name                #InventCleanupTrackingInventSumService
      Extends             #InventCleanupInventSumService
      RunOn               #Server
      Origin              #{B7613E14-A1CC-4A3D-9D2E-077D6C35E71D}
    ENDPROPERTIES
    
    METHODS
      SOURCE #addModifiedDateTimeFilter
        #/// <summary>
        #///    Applies a not updated within number of days filter to the <c>ModifiedDateTime</c> field on the <c>InventSum</c> table.
        #/// </summary>
        #/// <param name="_query">
        #///    A <c>Query</c> object containing a query range on the <c>ModifiedDateTime</c> field.
        #/// </param>
        #/// <param name="_deleteWhenNotUpdatedForDays">
        #///    The number of not updated days.
        #/// </param>
        #protected void addModifiedDateTimeFilter(Query _query, PositiveDays _deleteWhenNotUpdatedForDays)
        #{
        #    _query.dataSourceTable(tableNum(InventSum)).findRange(fieldNum(InventSum, ModifiedDateTime)).value(this.modifiedDateTimeQueryExpression(_deleteWhenNotUpdatedForDays));
        #}
        #
      ENDSOURCE
      SOURCE #addTrackingDimensionFilter
        #/// <summary>
        #///    Applies a filter on all tracking dimensions to ensure that at least one tracking dimension references a value.
        #/// </summary>
        #/// <param name="_query">
        #///    A <c>Query</c> object containing a query range on the <c>RecId</c> field.
        #/// </param>
        #protected void addTrackingDimensionFilter(Query _query)
        #{
        #    _query.dataSourceTable(tableNum(InventDim)).findRange(fieldNum(InventDim, RecId)).value(this.trackingDimensionQueryExpression());
        #}
      ENDSOURCE
      SOURCE #classDeclaration
        #/// <summary>
        #///    The <c>InventCleanupTrackingInventSumService</c> class provides the service operation for
        #///    cleaning up closed tracking dimension associated <c>InventSum</c> records.
        #/// </summary>
        #class InventCleanupTrackingInventSumService extends InventCleanupInventSumService
        #{
        #}
      ENDSOURCE
      SOURCE #cleanup
        #/// <summary>
        #///    Cleans up closed tracking dimension associated <c>InventSum</c> records specified by the
        #///    provided <c>InventCleanupTrackingInventSumContract</c> contract.
        #/// </summary>
        #/// <param name="_dataContract">
        #///    A <c>InventCleanupTrackingInventSumContract</c> object specifying the <c>InventSum</c> records
        #///    that should be cleaned up.
        #/// </param>
        #[SysEntryPointAttribute]
        #public void cleanup(InventCleanupTrackingInventSumContract  _dataContract)
        #{
        #    #OCCRetryCount
        #
        #    InventSum               inventSum;
        #    InventDim               inventDim;
        #    QueryRun                queryRun;
        #    Query                   query;
        #    SysOperationProgress    progress;
        #
        #    int                     initialTtsLevel;
        #    int                     cleanedUpInTransactionScope = 0;
        #    int                     cleanupCounter = 0;
        #
        #    query = new Query(SysOperationHelper::base64Decode(_dataContract.parmQuery()));
        #
        #    this.addTrackingDimensionFilter(query);
        #    this.addModifiedDateTimeFilter(query, _dataContract.parmDeleteWhenNotUpdatedForDays());
        #
        #    queryRun = new QueryRun(query);
        #
        #    progress = this.showProgress();
        #
        #    try
        #    {
        #        initialTtsLevel = appl.ttsLevel();
        #        cleanedUpInTransactionScope = 0;
        #
        #        while (queryRun.next())
        #        {
        #            inventSum = this.readInventSum(queryRun);
        #            inventDim = this.readInventDim(queryRun);
        #
        #            if ((appl.ttsLevel() - initialTtsLevel) == 0)
        #            {
        #                ttsbegin;
        #            }
        #
        #            if (this.cleanUpInventSum(inventSum, inventDim))
        #            {
        #                cleanedUpInTransactionScope++;
        #            }
        #
        #            if (cleanedUpInTransactionScope         >= _dataContract.parmCommitSize() &&
        #                (appl.ttsLevel() - initialTtsLevel) == 1)
        #            {
        #                ttscommit;
        #                cleanupCounter += cleanedUpInTransactionScope;
        #                cleanedUpInTransactionScope = 0;
        #                ttsbegin;
        #            }
        #        }
        #
        #        if ((appl.ttsLevel() - initialTtsLevel) == 1)
        #        {
        #            ttscommit;
        #            cleanupCounter += cleanedUpInTransactionScope;
        #        }
        #
        #        info(strFmt("@SYS4006018",cleanupCounter));
        #    }
        #    catch (Exception::Deadlock)
        #    {
        #        queryRun.reset();
        #        retry;
        #    }
        #    catch (Exception::DuplicateKeyException)
        #    {
        #        if (appl.ttsLevel() == 0)
        #        {
        #            if (xSession::currentRetryCount() >= #RetryNum)
        #            {
        #                throw Exception::DuplicateKeyExceptionNotRecovered;
        #            }
        #            else
        #            {
        #                queryRun.reset();
        #                retry;
        #            }
        #        }
        #        else
        #        {
        #            throw Exception::DuplicateKeyException;
        #        }
        #    }
        #    catch (Exception::UpdateConflict)
        #    {
        #        if (appl.ttsLevel() == 0)
        #        {
        #            if (xSession::currentRetryCount() >= #RetryNum)
        #            {
        #                throw Exception::UpdateConflictNotRecovered;
        #            }
        #            else
        #            {
        #                queryRun.reset();
        #                retry;
        #            }
        #        }
        #        else
        #        {
        #            throw Exception::UpdateConflict;
        #        }
        #    }
        #
        #    progress.kill();
        #}
      ENDSOURCE
      SOURCE #cleanUpInventSum
        #/// <summary>
        #///    Cleans up the specified <c>InventSum</c> record.
        #/// </summary>
        #/// <param name="_inventSum">
        #///    The <c>InventSum</c> record to be cleaned up.
        #/// </param>
        #/// <param name="_inventDim">
        #///    The <c>InventDim</c> record associated with the <c>InventSum</c> record.
        #/// </param>
        #/// <returns>
        #///    true if <c>InventSum</c> record was cleaned up; otherwise, false.
        #/// </returns>
        #protected boolean cleanUpInventSum(InventSum _inventSum, InventDim _inventDim)
        #{
        #    InventDimId   nonTrackingInventDimId;
        #
        #    if (!this.validateInventSumDelete(_inventSum))
        #    {
        #        return false;
        #    }
        #
        #    nonTrackingInventDimId = this.lookupNonTrackingInventDimId(_inventDim);
        #
        #    if (!this.isInventSumExisting(_inventSum.ItemId, nonTrackingInventDimId))
        #    {
        #        this.insertClosedInventSum(_inventSum.ItemId, nonTrackingInventDimId);
        #    }
        #
        #    this.deleteInventSum(_inventSum);
        #
        #    return true;
        #}
      ENDSOURCE
      SOURCE #deleteInventSum
        #/// <summary>
        #///    Deletes the specified <c>InventSum</c> record.
        #/// </summary>
        #/// <param name="_inventSum">
        #///    The <c>InventSum</c> record to be deleted.
        #/// </param>
        #protected void deleteInventSum(InventSum _inventSum)
        #{
        #    _inventSum.delete();
        #}
      ENDSOURCE
      SOURCE #insertClosedInventSum
        #/// <summary>
        #///    Insert a new closed <c>InventSum</c> record.
        #/// </summary>
        #/// <param name="_itemId">
        #///    The item ID to insert an <c>InventSum</c> record for.
        #/// </param>
        #/// <param name="_inventDimId">
        #///    The inventory dimension ID to insert an <c>InventSum</c> record for.
        #/// </param>
        #protected void insertClosedInventSum(ItemId _itemId, InventDimId _inventDimId)
        #{
        #    InventSum   newInventSum;
        #
        #    newInventSum.initValue();
        #    newInventSum.ItemId         = _itemId;
        #    newInventSum.InventDimId    = _inventDimId;
        #
        #    newInventSum.insert();
        #}
      ENDSOURCE
      SOURCE #isInventSumExisting
        #/// <summary>
        #///    Queries whether an <c>InventSum</c> record exists matching the specified parameters.
        #/// </summary>
        #/// <param name="_itemId">
        #///    The item ID to query for.
        #/// </param>
        #/// <param name="_inventDimId">
        #///    The inventory dimension ID to query for.
        #/// </param>
        #/// <returns>
        #///    true if <c>InventSum</c> record exists; otherwise, false.
        #/// </returns>
        #protected boolean isInventSumExisting(ItemId _itemId, InventDimId _inventDimId)
        #{
        #    return InventSum::exist(_itemId, _inventDimId);
        #}
      ENDSOURCE
      SOURCE #lookupNonTrackingInventDimId
        #/// <summary>
        #///    Looks up the the inventory dimension ID associated with an <c>InventDim</c> record matching the specified parameter,
        #///    but where no tracking dimension values are specified.
        #/// </summary>
        #/// <param name="_trackingInventDim">
        #///    The <c>InventDim</c> record containing tracking dimension values.
        #/// </param>
        #/// <returns>
        #///    An inventory dimension ID associated with an <c>InventDim</c> record without tracking dimension values.
        #/// </returns>
        #protected InventDimId lookupNonTrackingInventDimId(InventDim _trackingInventDim)
        #{
        #    InventDim   nonTrackingInventDim;
        #
        #    nonTrackingInventDim.data(_trackingInventDim);
        #    nonTrackingInventDim.clearTrackingDimensions();
        #    return InventDim::findOrCreate(nonTrackingInventDim).InventDimId;
        #}
      ENDSOURCE
      SOURCE #modifiedDateTimeQueryExpression
        #protected str modifiedDateTimeQueryExpression(PositiveDays _deleteWhenNotUpdatedForDays)
        #{
        #    return super(_deleteWhenNotUpdatedForDays);
        #}
      ENDSOURCE
      SOURCE #readInventDim
        #/// <summary>
        #///    Reads an <c>InventDim</c> record from the specified query.
        #/// </summary>
        #/// <param name="_queryRun">
        #///    The <c>QueryRun</c> object to read from.
        #/// </param>
        #/// <returns>
        #///    An <c>InventDim</c> record.
        #/// </returns>
        #protected InventDim readInventDim(QueryRun _queryRun)
        #{
        #    return _queryRun.get(tableNum(InventDim));
        #}
      ENDSOURCE
      SOURCE #readInventSum
        #/// <summary>
        #///    Reads an <c>InventSum</c> record from the specified query.
        #/// </summary>
        #/// <param name="_queryRun">
        #///    The <c>QueryRun</c> object to read from.
        #/// </param>
        #/// <returns>
        #///    An <c>InventSum</c> record.
        #/// </returns>
        #protected InventSum readInventSum(QueryRun _queryRun)
        #{
        #    return _queryRun.get(tableNum(InventSum));
        #}
      ENDSOURCE
      SOURCE #showProgress
        #/// <summary>
        #///    Creates and displays a progress bar.
        #/// </summary>
        #/// <returns>
        #///    A <c>SysOperationProgress</c> progress bar object.
        #/// </returns>
        #protected SysOperationProgress showProgress()
        #{
        #    #AviFiles
        #
        #    SysOperationProgress    progress;
        #
        #    progress = new SysOperationProgress(0);
        #
        #    progress.setAnimation(#AviFileDel);
        #    progress.setCaption("@SYS4006021");
        #    progress.update(true);
        #
        #    return progress;
        #}
      ENDSOURCE
      SOURCE #trackingDimensionFieldList
        #/// <summary>
        #///    Creates a list of tracking dimension field ids.
        #/// </summary>
        #/// <returns>
        #///    A <c>List</c> object containing all tracking dimension field ids.
        #/// </returns>
        #protected List trackingDimensionFieldList()
        #{
        #    return EcoResTrackingDimGroupSetup::dimFields();
        #}
      ENDSOURCE
      SOURCE #trackingDimensionQueryExpression
        #private str trackingDimensionQueryExpression()
        #{
        #    FieldId                 dimFieldId;
        #    ListEnumerator          dimFieldList = this.trackingDimensionFieldList().getEnumerator();
        #    str                     filterRange;
        #    TableName               inventDimName = tableStr(InventDim);
        #    FieldName               inventDimFieldName;
        #    anytype                 emptyValue;
        #
        #    while (dimFieldList.moveNext())
        #    {
        #        dimFieldId = dimFieldList.current();
        #
        #        if (!filterRange)
        #        {
        #            filterRange = '(';
        #        }
        #        else
        #        {
        #            filterRange += ' || ';
        #        }
        #
        #        inventDimFieldName = fieldId2name(tableNum(InventDim), dimFieldId);
        #        emptyValue = InventDim::emptyDimField(dimFieldId);
        #
        #        filterRange += strFmt('(%1.%2 != "%3")', inventDimName, inventDimFieldName, emptyValue);
        #    }
        #
        #    if (!filterRange)
        #    {
        #        filterRange = '(1==0)';
        #    }
        #    else
        #    {
        #        filterRange += ')';
        #    }
        #
        #    return filterRange;
        #}
      ENDSOURCE
      SOURCE #validateInventSumDelete
        #/// <summary>
        #///    Validates that the specified <c>InventSum</c> record may be deleted.
        #/// </summary>
        #/// <param name="_inventSum">
        #///    The <c>InventSum</c> record to validate.
        #/// </param>
        #/// <returns>
        #///    true if the <c>InventSum</c> record may be deleted; otherwise, false.
        #/// </returns>
        #protected boolean validateInventSumDelete(InventSum _inventSum)
        #{
        #    return _inventSum.validateDelete();
        #}
      ENDSOURCE
    ENDMETHODS
  ENDCLASS

***Element: CLS

; Microsoft Dynamics AX Class: InventCleanupWHSInventSumContract unloaded
; --------------------------------------------------------------------------------
  CLSVERSION 1
  
  CLASS #InventCleanupWHSInventSumContract
    PROPERTIES
      Name                #InventCleanupWHSInventSumContract
      Extends             #InventCleanupInventSumContract
      Origin              #{702697FB-0642-4136-BA2C-D3D238CA8A78}
    ENDPROPERTIES
    
    METHODS
      SOURCE #classDeclaration
        #/// <summary>
        #///    The <c>InventCleanupWHSInventSumContract</c> class is the contract for <c>InventCleanupWHSInventSumService</c> service class.
        #/// </summary>
        #[DataContractAttribute]
        #class InventCleanupWHSInventSumContract extends InventCleanupInventSumContract
        #{
        #    FieldId                         highestFieldId;
        #
        #}
      ENDSOURCE
      SOURCE #new
        #public void new()
        #{
        #    super();
        #
        #    highestFieldId = fieldNum(InventDim, WMSLocationId);
        #}
      ENDSOURCE
      SOURCE #parmCommitSize
        #public int parmCommitSize(int _commitSize = commitSize)
        #{
        #    return super(_commitSize);
        #}
      ENDSOURCE
      SOURCE #parmDeleteWhenNotUpdatedForDays
        #[DataMemberAttribute,
        #SysOperationLabelAttribute(literalStr("@SYS4006023")),
        #SysOperationHelpTextAttribute(literalStr("@SYS4006024"))]
        #public PositiveDays parmDeleteWhenNotUpdatedForDays(PositiveDays _deleteWhenNotUpdatedForDays = deleteWhenNotUpdatedForDays)
        #{
        #    return super(_deleteWhenNotUpdatedForDays);
        #}
      ENDSOURCE
      SOURCE #parmHighestFieldId
        #public FieldId parmHighestFieldId(FieldId _highestFieldId = highestFieldId)
        #{
        #    highestFieldId = _highestFieldId;
        #
        #    return highestFieldId;
        #}
      ENDSOURCE
      SOURCE #parmQuery
        #[DataMemberAttribute,
        #    AifQueryTypeAttribute('_query', queryStr(InventCleanupWHSInventSum))
        #]
        #public str parmQuery(str _query = query)
        #{
        #    query = _query;
        #    return query;
        #}
      ENDSOURCE
    ENDMETHODS
  ENDCLASS

***Element: CLS

; Microsoft Dynamics AX Class: InventCleanupWHSInventSumController unloaded
; --------------------------------------------------------------------------------
  CLSVERSION 1
  
  CLASS #InventCleanupWHSInventSumController
    PROPERTIES
      Name                #InventCleanupWHSInventSumController
      Extends             #SysOperationServiceController
      Origin              #{922658C5-5F69-4D05-9532-E16F3D3C7338}
    ENDPROPERTIES
    
    METHODS
      SOURCE #classDeclaration
        #/// <summary>
        #///    The <c>InventCleanupWHSInventSumController</c> class acts as a controller for the
        #///    <c>InventCleanupWHSInventSumService</c> service.
        #/// </summary>
        #public class InventCleanupWHSInventSumController extends SysOperationServiceController
        #{
        #}
      ENDSOURCE
      SOURCE #construct
        #/// <summary>
        #/// Creates a new instance of <c>InventCleanupWHSInventSumController</c> class.
        #/// </summary>
        #/// <param name="_args">
        #/// An instance of the <c>Args</c> class.
        #/// </param>
        #/// <returns>
        #/// A new instance of <c>InventCleanupWHSInventSumController</c> class.
        #/// </returns>
        #public static SysOperationController construct(Args _args)
        #{
        #    SysOperationController controller;
        #
        #    controller = new InventCleanupWHSInventSumController(
        #        classStr(InventCleanupWHSInventSumService),
        #        methodStr(InventCleanupWHSInventSumService, cleanup),
        #        SysOperationExecutionMode::Synchronous);
        #
        #    controller.parmArgs(_args);
        #
        #    return controller;
        #}
      ENDSOURCE
      SOURCE #main
        #public static void main(Args _args)
        #{
        #    InventCleanupWHSInventSumController::construct(_args).startOperation();
        #}
      ENDSOURCE
    ENDMETHODS
  ENDCLASS

***Element: CLS

; Microsoft Dynamics AX Class: InventCleanupWHSInventSumService unloaded
; --------------------------------------------------------------------------------
  CLSVERSION 1
  
  CLASS #InventCleanupWHSInventSumService
    PROPERTIES
      Name                #InventCleanupWHSInventSumService
      Extends             #InventCleanupInventSumService
      RunOn               #Server
      Origin              #{1BF633E7-DBCD-426C-AE60-349D5B23AD8B}
    ENDPROPERTIES
    
    METHODS
      SOURCE #checkCleanedUpRecordCount
        #/// <summary>
        #/// Commit records if the number of records exceeds the maximum number of uncommitted records.
        #/// </summary>
        #private void checkCleanedUpRecordCount()
        #{
        #    if (cleanedUpInTransactionScope         >= commitSize &&
        #        (appl.ttsLevel() - initialTtsLevel) == 1)
        #    {
        #        ttscommit;
        #        cleanupCounter += cleanedUpInTransactionScope;
        #        cleanedUpInTransactionScope = 0;
        #        ttsbegin;
        #    }
        #}
      ENDSOURCE
      SOURCE #classDeclaration
        #class InventCleanupWHSInventSumService extends InventCleanupInventSumService
        #{
        #    #WHSReservationHierarchy
        #    RefRecId                     reservationHierarchy;
        #    WHSReservationHierarchyLevel highestReservationLevel;
        #    FieldId                      highestReservationFieldId;
        #    int                          cleanupCounter;
        #    int                          cleanedUpInTransactionScope;
        #    int                          commitSize;
        #    int                          initialTtsLevel;
        #    Set                          examinedItemInventDimAcrossHierarchy;
        #    Set                          examinedItemInventDimUpHierarchy;
        #    List                         dimProductDimFieldList; //cache locally to avoid looking this up in the cache
        #
        #    #define.itemInventDimMaxCacheSize(100000)
        #    #define.UndefinedHierarchyLevel(-1)
        #}
      ENDSOURCE
      SOURCE #cleanup
        #[SysEntryPointAttribute]
        #public void cleanup(InventCleanupWHSInventSumContract _dataContract)
        #{
        #    #OCCRetryCount
        #
        #    InventSum               inventSum;
        #    InventDim               inventDim;
        #    InventTable             inventTable;
        #    ItemId                  prevItemId;
        #    QueryRun                queryRun;
        #    Query                   query;
        #    SysOperationProgress    progress;
        #
        #    this.initialize();
        #
        #    commitSize = _dataContract.parmCommitSize();
        #    highestReservationFieldId = _dataContract.parmHighestFieldId();
        #
        #    query = new Query(SysOperationHelper::base64Decode(_dataContract.parmQuery()));
        #    this.addModifiedDateTimeFilter(query, _dataContract.parmDeleteWhenNotUpdatedForDays());
        #
        #    // Check ranges. If any are specified the highest reservation field from the data contract is used in the clean up process,
        #    // otherwise the clean up process goes to the highest level in the reservation hierarchy.
        #    if (this.isAnyNonPrdDimensionSetInQuery(query))
        #    {
        #        highestReservationLevel = #UndefinedHierarchyLevel;
        #    }
        #    else
        #    {
        #        highestReservationLevel = #ITEMHIERARCHYLEVEL;
        #    }
        #
        #    queryRun = new QueryRun(query);
        #
        #    progress = this.showProgress();
        #
        #    try
        #    {
        #        initialTtsLevel = appl.ttsLevel();
        #        cleanedUpInTransactionScope = 0;
        #
        #        while (queryRun.next())
        #        {
        #            inventSum = this.readInventSum(queryRun);
        #            inventDim = this.readInventDim(queryRun);
        #            inventTable = this.readInventTable(queryRun);
        #
        #            // Set the highest reservation hierarchy level if the item has changed.
        #            if (prevItemId != inventTable.ItemId)
        #            {
        #                this.setHighestReservationLevel(highestReservationFieldId, inventTable);
        #                reservationHierarchy = WHSReservationHierarchyItem::findByItem(inventSum.DataAreaId, inventTable.ItemId).ReservationHierarchy;
        #            }
        #
        #            if ((appl.ttsLevel() - initialTtsLevel) == 0)
        #            {
        #                ttsbegin;
        #            }
        #
        #            this.cleanUpWHSInventReserve(inventSum, inventDim, inventTable);
        #
        #            if (this.validateWHSInventReserveRecsDeleted(inventTable, inventDim)
        #                && this.cleanUpInventSum(inventSum, inventDim))
        #            {
        #                cleanedUpInTransactionScope++;
        #            }
        #
        #            this.checkCleanedUpRecordCount();
        #
        #            prevItemId = inventTable.ItemId;
        #        }
        #
        #        if ((appl.ttsLevel() - initialTtsLevel) == 1)
        #        {
        #            ttscommit;
        #            cleanupCounter += cleanedUpInTransactionScope;
        #        }
        #
        #        info(strFmt("@SYS4006018",cleanupCounter));
        #    }
        #    catch (Exception::Deadlock)
        #    {
        #        queryRun.reset();
        #        retry;
        #    }
        #    catch (Exception::DuplicateKeyException)
        #    {
        #        if (appl.ttsLevel() == 0)
        #        {
        #            if (xSession::currentRetryCount() >= #RetryNum)
        #            {
        #                throw Exception::DuplicateKeyExceptionNotRecovered;
        #            }
        #            else
        #            {
        #                queryRun.reset();
        #                retry;
        #            }
        #        }
        #        else
        #        {
        #            throw Exception::DuplicateKeyException;
        #        }
        #    }
        #    catch (Exception::UpdateConflict)
        #    {
        #        if (appl.ttsLevel() == 0)
        #        {
        #            if (xSession::currentRetryCount() >= #RetryNum)
        #            {
        #                throw Exception::UpdateConflictNotRecovered;
        #            }
        #            else
        #            {
        #                queryRun.reset();
        #                retry;
        #            }
        #        }
        #        else
        #        {
        #            throw Exception::UpdateConflict;
        #        }
        #    }
        #
        #    progress.kill();
        #}
      ENDSOURCE
      SOURCE #cleanUpInventSum
        #protected boolean cleanUpInventSum(InventSum _inventSum, InventDim _inventDim)
        #{
        #    if (!this.validateInventSumDelete(_inventSum))
        #    {
        #        return false;
        #    }
        #
        #    this.deleteInventSum(_inventSum);
        #
        #    return true;
        #}
      ENDSOURCE
      SOURCE #cleanUpWHSInventReserve
        #/// <summary>
        #///    Cleans up the specified <c>InventSum</c> record.
        #/// </summary>
        #/// <param name="_inventSum">
        #///    The <c>InventSum</c> record to be cleaned up.
        #/// </param>
        #/// <param name="_inventDim">
        #///    The dimension set record associated with the <c>InventSum</c> record.
        #/// </param>
        #/// /// <param name="_inventTable">
        #///    The item record associated with the <c>InventSum</c> record.
        #/// </param>
        #/// <returns>
        #///    true if the <c>InventSum</c> record can be deleted; otherwise, false.
        #/// </returns>
        #protected boolean cleanUpWHSInventReserve(
        #    InventSum   _inventSum,
        #    InventDim   _inventDim,
        #    InventTable _inventTable)
        #{
        #    boolean ret;
        #
        #    if (this.negativePhysicalInventoryAllowed(_inventDim.InventLocationId, _inventSum.ItemId, _inventSum.DataAreaId))
        #    {
        #        ret = this.deleteWHSInventReserveAcrossHierarchy(_inventSum, _inventDim, _inventTable);
        #    }
        #    else
        #    {
        #        ret = this.deleteWHSInventReserveUpHierarchy(_inventTable, _inventDim);
        #    }
        #
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #deleteWHSInventReserveAcrossHierarchy
        #/// <summary>
        #/// Remove empty <c>WHSInventReserve</c> records based on the specified <c>InventSum</c> record
        #/// by first removing all records at the lowest level, then moving up the reservation hierarchy if possible.
        #/// </summary>
        #/// <param name="_inventSum">
        #/// The specified <c>InventSum</c> record.
        #/// </param>
        #/// <param name="_inventDim">
        #/// The dimension set from the <c>InventSum</c> record.
        #/// </param>
        #/// /// <param name="_inventTable">
        #/// The item information related to the <c>InventSum</c> record.
        #/// </param>
        #/// <returns>
        #/// True if the <c>WHSInventReserve</c> records were deleted to a point where the <c>InventSum</c> record can be removed.
        #/// </returns>
        #private boolean deleteWHSInventReserveAcrossHierarchy(
        #    InventSum   _inventSum,
        #    InventDim   _inventDim,
        #    InventTable _inventTable)
        #{
        #    WHSReservationHierarchyLevel    curResHierarchyLevel;
        #    WHSReservationHierarchyLevel    lowestResHierarchyLevel;
        #    WHSInventReserve                whsInventReserve;
        #    WHSInventReserve                whsInventReserveLowerLevel;
        #    InventDim                       inventDim;
        #    InventDim                       inventDimCriteria = InventDim::findOrCreate(_inventDim);
        #    InventDim                       inventDimLowerLevel;
        #    InventDimParm                   inventDimParm;
        #    InventDimParm                   inventDimParmLowerLevel;
        #    int64                           recsRemoved;
        #    boolean                         ret;
        #    container                       keyItemDimCriteria;
        #
        #    // If the dimension has unallowed blank values, we won't find any inventreserve records on at least some levels, so for performance reasons we exit early.
        #    if (WHSReservationHierarchyInventDimUtil::inventDimHasNotAllowedBlankValues(_inventDim,
        #                                                                                WHSReservationHierarchyProvider::construct().getDimListAllFromInventTable(_inventTable, WHSReservationHierarchySortOrder::BottomUp),
        #                                                                                InventDimGroupSetup::newInventTable(_inventTable)))
        #    {
        #        return false;
        #    }
        #
        #    if (!examinedItemInventDimAcrossHierarchy || examinedItemInventDimAcrossHierarchy.elements() >= #itemInventDimMaxCacheSize)
        #    {
        #        examinedItemInventDimAcrossHierarchy = new Set(Types::Container);
        #    }
        #
        #    do
        #    {
        #        // Reset variable to determine when to break out of loop.
        #        recsRemoved = 0;
        #
        #        // Get the current reservation hierarchy level
        #        if (curResHierarchyLevel == 0)
        #        {
        #            lowestResHierarchyLevel = WHSReservationHierarchyProvider::construct().getBottomHierarchyLevel(_inventTable);
        #            curResHierarchyLevel = lowestResHierarchyLevel;
        #        }
        #        else
        #        {
        #            curResHierarchyLevel--;
        #        }
        #
        #        // Find a dimension set record where the field corresponding to the current reservation level is blank.
        #        inventDimCriteria = this.findHigherReservationInventDim(inventDimCriteria, curResHierarchyLevel);
        #        inventDimParm.initFromInventDim(inventDimCriteria);
        #        keyItemDimCriteria = [_inventSum.ItemId, inventDimCriteria.InventDimId];
        #        if (!examinedItemInventDimAcrossHierarchy.in(keyItemDimCriteria))
        #        {
        #            //we only need to do this once per item+dimcritera. Either we delete the rows or we can't delete them.
        #            //On the lowest hierarchyLevel we don't need to track dims as they only exists once.
        #            if (curResHierarchyLevel != lowestResHierarchyLevel)
        #            {
        #                examinedItemInventDimAcrossHierarchy.add(keyItemDimCriteria);
        #            }
        #
        #            while select forupdate whsInventReserve
        #                where whsInventReserve.ItemId           == _inventSum.ItemId
        #                    && whsInventReserve.HierarchyLevel  == curResHierarchyLevel
        #                    && whsInventReserve.AvailOrdered    == 0
        #                    && whsInventReserve.AvailPhysical   == 0
        #                    && whsInventReserve.ReservOrdered   == 0
        #                    && whsInventReserve.ReservPhysical  == 0
        #                #InventDimInnerJoin(whsInventReserve.InventDimId, inventDim, inventDimCriteria, inventDimParm)
        #            {
        #                // Verify that there are no open records on any level below the current level matching the dimensions.
        #                if (curResHierarchyLevel != lowestResHierarchyLevel)
        #                {
        #                    inventDimParmLowerLevel.initFromInventDim(inventDim);
        #                    select firstonly RecId from whsInventReserveLowerLevel
        #                        where whsInventReserveLowerLevel.ItemId == whsInventReserve.ItemId
        #                            && whsInventReserveLowerLevel.HierarchyLevel > curResHierarchyLevel
        #                            && (whsInventReserveLowerLevel.AvailPhysical != 0
        #                            || whsInventReserveLowerLevel.AvailOrdered   != 0
        #                            || whsInventReserveLowerLevel.ReservPhysical != 0
        #                            || whsInventReserveLowerLevel.ReservOrdered  != 0)
        #                        #InventDimExistsJoin(whsInventReserveLowerLevel.InventDimId, inventDimLowerLevel, inventDim, inventDimParmLowerLevel);
        #                }
        #
        #                if (whsInventReserveLowerLevel.RecId == 0 && whsInventReserve.validateDelete())
        #                {
        #                    whsInventReserve.delete();
        #                    recsRemoved += 1;
        #                }
        #            }
        #        }
        #        if (recsRemoved > 0)
        #        {
        #            cleanedUpInTransactionScope += recsRemoved;
        #            this.checkCleanedUpRecordCount();
        #            ret = true;
        #        }
        #    }
        #
        #    while (curResHierarchyLevel > highestReservationLevel);
        #
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #deleteWHSInventReserveUpHierarchy
        #/// <summary>
        #/// Remove empty <c>WHSInventReserve</c> records based on the specified <c>InventSum</c> record
        #/// by moving up the reservation hierarchy.
        #/// </summary>
        #/// <param name="_inventTable">
        #/// The item information for the item associated with the records being deleted.
        #/// </param>
        #/// <param name="_inventDimCriteria">
        #/// The dimension set from the <c>InventSum</c> record.
        #/// </param>
        #/// <returns>
        #/// True if the <c>WHSInventReserve</c> records were deleted to a point where the <c>InventSum</c> record can be removed.
        #/// </returns>
        #private boolean deleteWHSInventReserveUpHierarchy(InventTable _inventTable, InventDim _inventDimCriteria)
        #{
        #    WHSInventReserve                whsInventReserve;
        #    WHSReservationHierarchyElement  reservationHierarchyElement;
        #    InventDim                       inventDim;
        #    InventDimParm                   inventDimParm;
        #    int64                           recsUpdated;
        #    container                       keyItemDimCriteria;
        #
        #    if (!examinedItemInventDimUpHierarchy || examinedItemInventDimUpHierarchy.elements() >= #itemInventDimMaxCacheSize)
        #    {
        #        examinedItemInventDimUpHierarchy = new Set(Types::Container);
        #    }
        #
        #    inventDimParm = this.initInventDimParmHighestReserveLevel(_inventTable, _inventDimCriteria);
        #
        #    keyItemDimCriteria = [_inventTable.ItemId, _inventDimCriteria.InventDimId];
        #    if (!examinedItemInventDimUpHierarchy.in(keyItemDimCriteria))
        #    {
        #        examinedItemInventDimUpHierarchy.add(keyItemDimCriteria);
        #
        #        // Adding forceLiterals keyword as during test runs we've observed performance degradation caused by selection of less optimum execution plans.
        #        delete_from forceliterals whsInventReserve
        #            where whsInventReserve.ItemId          == _inventTable.ItemId
        #                && whsInventReserve.AvailOrdered   == 0
        #                && whsInventReserve.AvailPhysical  == 0
        #                && whsInventReserve.ReservOrdered  == 0
        #                && whsInventReserve.ReservPhysical == 0
        #            #InventDimExistsJoin(whsInventReserve.InventDimId, inventDim, _inventDimCriteria, inventDimParm)
        #            exists join reservationHierarchyElement
        #                where reservationHierarchyElement.ReservationHierarchy       == reservationHierarchy
        #                   && (reservationHierarchyElement.ReservationHierarchyLevel == whsInventReserve.HierarchyLevel
        #                       || whsInventReserve.HierarchyLevel == #ITEMHIERARCHYLEVEL) //for the item level there is no reservation hierachy element
        #                   && whsInventReserve.HierarchyLevel >= highestReservationLevel;
        #
        #        recsUpdated = whsInventReserve.RowCount();
        #        cleanedUpInTransactionScope += recsUpdated;
        #        this.checkCleanedUpRecordCount();
        #    }
        #
        #    return recsUpdated > 0;
        #}
      ENDSOURCE
      SOURCE #findHigherReservationInventDim
        #/// <summary>
        #/// Find an inventory dimension record that has all fields above the current reservation level specified.
        #/// </summary>
        #/// <param name="_inventDim">
        #/// The current inventory dimension set.
        #/// </param>
        #/// <param name="_resHierarchyLevel">
        #/// The current reservation hierarchy level.
        #/// </param>
        #/// <returns>
        #/// The inventory dimension set that was found.
        #/// </returns>
        #private InventDim findHigherReservationInventDim(InventDim _inventDim, WHSReservationHierarchyLevel _resHierarchyLevel)
        #{
        #    WHSReservationHierarchyElement  reservationHierarchyElement;
        #    InventDim                       inventDimCriteria = InventDim::find(_inventDim.InventDimId);
        #
        #    if (_resHierarchyLevel == #ITEMHIERARCHYLEVEL)
        #    {
        #        return inventDimCriteria;
        #    }
        #
        #    select firstonly DimensionFieldId from reservationHierarchyElement
        #        where reservationHierarchyElement.ReservationHierarchyLevel == _resHierarchyLevel
        #            && reservationHierarchyElement.ReservationHierarchy     == reservationHierarchy;
        #
        #    inventDimCriteria.(reservationHierarchyElement.DimensionFieldId) = '';
        #    inventDimCriteria = InventDim::findOrCreate(inventDimCriteria);
        #
        #    return inventDimCriteria;
        #}
      ENDSOURCE
      SOURCE #getStorageAndTrackingDimensionsSet
        #/// <summary>
        #/// Generates a set of all the tracking and storage dimensions of <c>InventDim</c>
        #/// </summary>
        #/// <returns>
        #/// A set of all the tracking and storage dimennsion.
        #/// </returns>
        #private Set getStorageAndTrackingDimensionsSet()
        #{
        #    List            storageAndTrackingDimensions = InventDim::dimTrackingDimFieldList();
        #    Set             storageAndTrackingDimensionsSet = new Set(Types::Integer);
        #    ListEnumerator  enumerator;
        #
        #    storageAndTrackingDimensions.appendList(InventDim::dimStorageDimFieldList());
        #
        #    enumerator = storageAndTrackingDimensions.getEnumerator();
        #    while (enumerator.moveNext())
        #    {
        #        storageAndTrackingDimensionsSet.add(enumerator.current());
        #    }
        #
        #    return storageAndTrackingDimensionsSet;
        #}
        #
      ENDSOURCE
      SOURCE #initialize
        #/// <summary>
        #/// Initializes the instance.
        #/// </summary>
        #protected void initialize()
        #{
        #    cleanupCounter = 0;
        #    cleanedUpInTransactionScope = 0;
        #    dimProductDimFieldList = InventDim::dimProductDimFieldList();
        #}
        #
      ENDSOURCE
      SOURCE #initInventDimParmHighestReserveLevel
        #/// <summary>
        #/// Creates an <c>InventDimParm</c> record based on the item and the highest reserveration hierarchy field to delete up to.
        #/// </summary>
        #/// <param name="_inventTable">
        #/// The item information for the records to be deleted.
        #/// </param>
        #/// <param name="_inventDimCriteria">
        #/// The inventory dimension criteria for reservation; optional.
        #/// </param>
        #/// <returns>
        #/// The initialized <c>InventDimParm</c> buffer.
        #/// </returns>
        #/// <remarks>
        #/// If the highest reservation field value is customized this needs to be updated.
        #/// </remarks>
        #protected InventDimParm initInventDimParmHighestReserveLevel(InventTable _inventTable, InventDim _inventDimCriteria = null)
        #{
        #    InventDimParm inventDimParm;
        #
        #    if (highestReservationLevel == #ITEMHIERARCHYLEVEL)
        #    {
        #        //we need to ensure that we still respect filtering on specific product dimension if we delete all the way up the hiearchy
        #        if (_inventDimCriteria.anyProductDimensionSpecified())
        #        {
        #            inventDimParm.initfromInventDim(_inventDimCriteria, dimProductDimFieldList);
        #        }
        #    }
        #    else if (highestReservationFieldId == fieldNum(InventDim, WMSLocationId))
        #    {
        #
        #        inventDimParm = WHSReservationHierarchyInventDimUtil::initInventDimParmAboveLocation(_inventTable);
        #    }
        #    else
        #    {
        #        throw error("@SYP4884061");
        #    }
        #
        #    return inventDimParm;
        #}
      ENDSOURCE
      SOURCE #isAnyNonPrdDimensionSetInQuery
        #private boolean isAnyNonPrdDimensionSetInQuery(Query _query)
        #{
        #    boolean ret;
        #
        #    Set storageAndTrackingDimensionsSet = this.getStorageAndTrackingDimensionsSet();
        #
        #    ret = this.isAnyNonPrdDimSetInInventDimDataSource(storageAndTrackingDimensionsSet, _query);
        #
        #    if (!ret)
        #    {
        #        ret = this.isAnyNonPrdDimensionSetInQueryFilters(storageAndTrackingDimensionsSet, _query);
        #    }
        #
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #isAnyNonPrdDimensionSetInQueryFilters
        #private boolean isAnyNonPrdDimensionSetInQueryFilters(Set _storageAndTrackingDimensionsSet, Query _query)
        #{
        #    int i;
        #    QueryFilter             queryFilter;
        #    QueryBuildDataSource    qbdsQueryFilterInventDim;
        #
        #    for (i = 1; i <= _query.queryFilterCount(); i++)
        #    {
        #        queryFilter                 = _query.queryFilter(i);
        #        qbdsQueryFilterInventDim    = queryFilter.dataSource();
        #
        #        if (qbdsQueryFilterInventDim.table() == tableNum(InventDim)
        #            && queryFilter.value()
        #            && _storageAndTrackingDimensionsSet.in(fieldName2Id(tableNum(InventDim), queryFilter.field())))
        #        {
        #            return true;
        #        }
        #    }
        #
        #    return false;
        #}
      ENDSOURCE
      SOURCE #isAnyNonPrdDimSetInInventDimDataSource
        #private boolean isAnyNonPrdDimSetInInventDimDataSource(Set _storageAndTrackingDimensionsSet, Query _query)
        #{
        #    int i;
        #    QueryBuildRange         queryBuildRange;
        #    QueryBuildDataSource    qbdsInventDim = _query.dataSourceTable(tableNum(InventDim));
        #
        #    for (i = 1; i <= qbdsInventDim.rangeCount(); i++)
        #    {
        #        queryBuildRange = qbdsInventDim.range(i);
        #
        #        if (queryBuildRange.value()
        #            && _storageAndTrackingDimensionsSet.in(queryBuildRange.field()))
        #        {
        #            return true;
        #        }
        #    }
        #
        #    return false;
        #}
      ENDSOURCE
      SOURCE #negativePhysicalInventoryAllowed
        #/// <summary>
        #/// Checks if the item model for the <c>InventSum</c> item allows negative physical inventory.
        #/// </summary>
        #/// <param name="_inventLocationId">
        #/// The warehouse related to the on hand records.
        #/// </param>
        #/// <param name="_itemId">
        #/// The item number from the on hand record.
        #/// </param>
        #/// <param name="_dataAreaId">
        #/// The data area Id from the on hand record.
        #/// </param>
        #/// <returns>
        #/// True if negative inventory is allowed; otherwise, false.
        #/// </returns>
        #protected boolean negativePhysicalInventoryAllowed(
        #    InventLocationId    _inventLocationId,
        #    ItemId              _itemId,
        #    DataAreaId          _dataAreaId)
        #{
        #    // Check if the warehouse and item allow negative inventory.
        #    return (InventModelGroupItem::modelGroupByItemIdLegalEntity(_itemId, _dataAreaId).NegativePhysical
        #            || InventLocation::find(_inventLocationId).RetailInventNegPhysical);
        #}
      ENDSOURCE
      SOURCE #setHighestReservationLevel
        #/// <summary>
        #/// Sets the highest reservation hierarchy level variable.
        #/// </summary>
        #/// <param name="_highestFieldId">
        #/// The highest <c>InventDim</c> field that the job should clear records for.
        #/// </param>
        #/// <param name="_inventTable">
        #/// The item information for the records being removed.
        #/// </param>
        #private void setHighestReservationLevel(FieldId _highestFieldId, InventTable _inventTable)
        #{
        #    //the item level is in-dependent of the item so if we are deleting all the way up in the hiearchy we don't need to set a new level based on the item.
        #    if (highestReservationLevel != #ITEMHIERARCHYLEVEL)
        #    {
        #        highestReservationLevel = WHSReservationHierarchyProvider::construct().getDimLevel(_inventTable, _highestFieldId);
        #    }
        #}
      ENDSOURCE
      SOURCE #validateInventSumDelete
        #protected boolean validateInventSumDelete(InventSum _inventSum)
        #{
        #    boolean                      ret;
        #    WHSReservationHierarchyLevel level;
        #
        #    ret = super(_inventSum);
        #
        #    if (ret)
        #    {
        #        level = WHSReservationHierarchyInventDimUtil::getLevelOfFirstBlankDim(_inventSum.ItemId,
        #                                                                              _inventSum.inventDim(),
        #                                                                              WHSReservationHierarchySortOrder::TopDown);
        #        // Do not delete <c>InventSum</c> record if the dimension set is above the highest reservation level to delete.
        #        if (level < highestReservationLevel
        #            && level != 0) // if there are no blank dimension fields then level will be zero.
        #        {
        #            ret = false;
        #        }
        #    }
        #
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #validateWHSInventReserveRecsDeleted
        #/// <summary>
        #/// Validates that an <c>InventSum</c> record can be deleted based on the remaining <c>WHSInventReserve</c>
        #/// records related to the item and dimension set.
        #/// </summary>
        #/// /// <param name="_inventTable">
        #/// The item information for the <c>InventSum</c> record.
        #/// </param>
        #/// <param name="_inventDim">
        #/// The dimension set for the <c>InventSum</c> record.
        #/// </param>
        #/// <returns>
        #/// True if a record can be deleted, otherwise false.
        #/// </returns>
        #private boolean validateWHSInventReserveRecsDeleted(InventTable _inventTable, InventDim _inventDim)
        #{
        #    WHSInventReserve                    whsInventReserve;
        #    InventDim                           inventDimCriteria;
        #    WHSReservationHierarchyElement      resHierarchyElement;
        #    InventDim                           inventDim;
        #    InventDimParm                       inventDimParm;
        #
        #    inventDimCriteria.data(_inventDim);
        #    inventDimCriteria.clearFieldsFromHierarchyList(WHSReservationHierarchyProvider::construct().
        #                                                   getDimListBelowLocation(_inventTable, WHSReservationHierarchySortOrder::BottomUp));
        #
        #    inventDimParm.initFromInventDim(inventDimCriteria);
        #
        #    select firstonly RecId from whsInventReserve
        #        where whsInventReserve.ItemId == _inventTable.ItemId
        #            && (whsInventReserve.AvailOrdered  == 0
        #            && whsInventReserve.AvailPhysical  == 0
        #            && whsInventReserve.ReservOrdered  == 0
        #            && whsInventReserve.ReservPhysical == 0)
        #            #InventDimExistsJoin(whsInventReserve.InventDimId, InventDim, inventDimCriteria, inventDimParm)
        #        exists join resHierarchyElement
        #            where resHierarchyElement.ReservationHierarchyLevel  == whsInventReserve.HierarchyLevel
        #               && (resHierarchyElement.ReservationHierarchyLevel == whsInventReserve.HierarchyLevel
        #                   || whsInventReserve.HierarchyLevel == #ITEMHIERARCHYLEVEL)
        #               && whsInventReserve.HierarchyLevel >= highestReservationLevel;
        #
        #    return whsInventReserve.RecId == 0;
        #}
      ENDSOURCE
    ENDMETHODS
  ENDCLASS

***Element: FTM

; Microsoft Dynamics AX MENUITEM : InventCleanupWHSInventSum unloaded
; --------------------------------------------------------------------------------
  VERSION 1
  
  MENUITEM #InventCleanupWHSInventSum
    Type: 3
    PROPERTIES
      Name                #InventCleanupWHSInventSum
      Label               #@SYP4883989
      HelpText            #@SYP4883990
      ObjectType          #Class
      Object              #InventCleanupWHSInventSumController
      ConfigurationKey    #WHSandTMS
      ViewUserLicense     #Functional
      MaintainUserLicense #Functional
      Origin              #{EE38BA70-25BA-4DEC-A397-0896CE1707B2}
    ENDPROPERTIES
    
  ENDMENUITEM
  

***Element: FTM

; Microsoft Dynamics AX MENUITEM : InventCleanupTrackingInventSum unloaded
; --------------------------------------------------------------------------------
  VERSION 1
  
  MENUITEM #InventCleanupTrackingInventSum
    Type: 3
    PROPERTIES
      Name                #InventCleanupTrackingInventSum
      Label               #@SYS4006021
      HelpText            #@SYS4006022
      ObjectType          #Class
      Object              #InventCleanupTrackingInventSumController
      ConfigurationKey    #LogisticsBasic
      ViewUserLicense     #Functional
      MaintainUserLicense #Functional
      Origin              #{2A995DE1-5671-4B22-9E07-6845AED42B5E}
    ENDPROPERTIES
    
  ENDMENUITEM
  

***Element: FTM

; Microsoft Dynamics AX MENUITEM : InventSumSummarize unloaded
; --------------------------------------------------------------------------------
  VERSION 1
  
  MENUITEM #InventSumSummarize
    Type: 3
    PROPERTIES
      Name                #InventSumSummarize
      Label               #@SYP4882191
      HelpText            #@SYP4882192
      ObjectType          #Class
      Object              #InventSumSummarizeController
      ConfigurationKey    #LogisticsBasic
      ViewUserLicense     #Functional
      MaintainUserLicense #Functional
      Origin              #{877293D4-410B-4292-937F-9B8826377311}
    ENDPROPERTIES
    
  ENDMENUITEM
  

***Element: MNU

; Microsoft Dynamics AX Menu : InventoryManagement unloaded
; --------------------------------------------------------------------------------
  MNUVERSION 5
  
  MENU #InventoryManagement
    PROPERTIES
      Name                #InventoryManagement
      Label               #@SYS25197
      SetCompany          #Yes
      NormalImage         #3486
      ImageLocation       #EmbeddedResource
      Origin              #{0E0E4F60-33D5-4D5A-9CDC-8A4F3E012505}
    ENDPROPERTIES
    
    MENU #@SYS333846
      PROPERTIES
        Name                #Common
        Label               #@SYS333846
        NormalImage         #3495
        ImageLocation       #EmbeddedResource
      ENDPROPERTIES
      
      MENUITEM
        PROPERTIES
          Name                #On-hand inventory
          MenuItemName        #InventOnHandListPage
          IsDisplayedInContentArea    #Yes
        ENDPROPERTIES
        
      ENDMENUITEM
      MENUITEM
        PROPERTIES
          Name                #Locations
          MenuItemName        #DirViewLocations
          IsDisplayedInContentArea    #Yes
        ENDPROPERTIES
        
      ENDMENUITEM
      MENUITEM
        PROPERTIES
          Name                #Bills of materials
          MenuItemName        #BOMTable
        ENDPROPERTIES
        
      ENDMENUITEM
      MENUITEM
        PROPERTIES
          Name                #Shipments
          MenuItemName        #WMSShipment
        ENDPROPERTIES
        
      ENDMENUITEM
      MENUITEM
        PROPERTIES
          Name                #Picking routes
          MenuItemName        #WMSPickForm
        ENDPROPERTIES
        
      ENDMENUITEM
      MENUITEM
        PROPERTIES
          Name                #Pallet transports
          MenuItemName        #WMSTransportHandling
        ENDPROPERTIES
        
      ENDMENUITEM
      MENUITEM
        PROPERTIES
          Name                #Sales pickup
          MenuItemName        #ShipCarrierSalesPickUp
        ENDPROPERTIES
        
      ENDMENUITEM
      MENUITEM
        PROPERTIES
          Name                #All customs journals
          MenuItemName        #CustomJournalTableListPage
          IsDisplayedInContentArea    #Yes
        ENDPROPERTIES
        
      ENDMENUITEM
      MENUITEM
        PROPERTIES
          Name                #Formula
          MenuItemName        #PmfFormulaTable
        ENDPROPERTIES
        
      ENDMENUITEM
      MENUITEM
        PROPERTIES
          Name                #Planned transfers
          MenuItemName        #ReqTransPoTransferListPage
          IsDisplayedInContentArea    #Yes
        ENDPROPERTIES
        
      ENDMENUITEM
      MENUITEM
        PROPERTIES
          Name                #All fiscal documents
          MenuItemName        #FiscalDocumentListPageFiscalEstablish_BR
          IsDisplayedInContentArea    #Yes
        ENDPROPERTIES
        
      ENDMENUITEM
      MENUITEM
        PROPERTIES
          Name                #Picking workbench
          MenuItemName        #MCRPickingWorkbench
        ENDPROPERTIES
        
      ENDMENUITEM
      MENU #@SYS12539
        PROPERTIES
          Name                #Costing
          Label               #@SYS12539
        ENDPROPERTIES
        
        MENUITEM
          PROPERTIES
            Name                #Products without an active cost
            MenuItemName        #CostReleasedProductsMissingActiveCost
            IsDisplayedInContentArea    #Yes
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Products that must be configured
            MenuItemName        #CostReleasedProductsMissingCostingData
            IsDisplayedInContentArea    #Yes
          ENDPROPERTIES
          
        ENDMENUITEM
      ENDMENU
    ENDMENU
    MENU #@SYS333879
      PROPERTIES
        Name                #Journals
        Label               #@SYS333879
        NormalImage         #3475
        ImageLocation       #EmbeddedResource
      ENDPROPERTIES
      
      MENU #@SYS334193
        PROPERTIES
          Name                #ItemTransactions
          Label               #@SYS334193
        ENDPROPERTIES
        
        MENUITEM
          PROPERTIES
            Name                #Movement
            MenuItemName        #InventJournalTableMovement
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Inventory adjustment
            MenuItemName        #InventJournalTableLossProfit
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Transfer
            MenuItemName        #InventJournalTableTransfer
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Bills of materials
            MenuItemName        #InventJournalTableBOM
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #External inventory
            MenuItemName        #PlInventJournalTableTransferExternal
          ENDPROPERTIES
          
        ENDMENUITEM
      ENDMENU
      MENU #@SYS334194
        PROPERTIES
          Name                #ItemArrival
          Label               #@SYS334194
        ENDPROPERTIES
        
        MENUITEM
          PROPERTIES
            Name                #Item arrival
            MenuItemName        #WMSJournalReception
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Production input
            MenuItemName        #WMSJournalProduction
          ENDPROPERTIES
          
        ENDMENUITEM
      ENDMENU
      MENU #@SYS334195
        PROPERTIES
          Name                #ItemCounting
          Label               #@SYS334195
        ENDPROPERTIES
        
        MENUITEM
          PROPERTIES
            Name                #Counting
            MenuItemName        #InventJournalTableCount
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Tag counting
            MenuItemName        #InventJournalTableCountTag
          ENDPROPERTIES
          
        ENDMENUITEM
      ENDMENU
      MENU #@SYS334196
        PROPERTIES
          Name                #FiscalLifo
          Label               #@SYS334196
        ENDPROPERTIES
        
        MENUITEM
          PROPERTIES
            Name                #Financial lifo internal
            MenuItemName        #InventFiscalLIFOJournalTableInternal
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Financial LIFO annual municipal report
            MenuItemName        #InventFiscalLIFOJournalTableFinal
          ENDPROPERTIES
          
        ENDMENUITEM
      ENDMENU
      MENU #@SYS4002797
        PROPERTIES
          Name                #AlcoholDeclaration
          Label               #@SYS4002797
          CountryRegionCodes  #RU
        ENDPROPERTIES
        
        MENUITEM
          PROPERTIES
            Name                #Alcohol declaration journal
            MenuItemName        #AlcoholDeclarationJournalTable_RU
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Daily journal for alcohol production turnover
            MenuItemName        #AlcoholDailyJournalTable_RU
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Quarterly journal for alcohol production turnover
            MenuItemName        #AlcoholJournalTable_RU
          ENDPROPERTIES
          
        ENDMENUITEM
      ENDMENU
    ENDMENU
    MENU #@SYS333856
      PROPERTIES
        Name                #Inquiries
        Label               #@SYS333856
        NormalImage         #3474
        ImageLocation       #EmbeddedResource
      ENDPROPERTIES
      
      MENUITEM
        PROPERTIES
          Name                #On-hand
          MenuItemName        #InventOnhandItem
        ENDPROPERTIES
        
      ENDMENUITEM
      MENUITEM
        PROPERTIES
          Name                #External inventory on-hand
          MenuItemName        #PlInventSumExternal
        ENDPROPERTIES
        
      ENDMENUITEM
      MENUITEM
        PROPERTIES
          Name                #Counting history
          MenuItemName        #InventCountJour
        ENDPROPERTIES
        
      ENDMENUITEM
      MENUITEM
        PROPERTIES
          Name                #Output orders
          MenuItemName        #WMSOrder
        ENDPROPERTIES
        
      ENDMENUITEM
      MENUITEM
        PROPERTIES
          Name                #Carrier transaction information
          MenuItemName        #ShipCarrierShipmentInformation
        ENDPROPERTIES
        
      ENDMENUITEM
      MENUITEM
        PROPERTIES
          Name                #Carrier issues
          MenuItemName        #ShipCarrierIssues
        ENDPROPERTIES
        
      ENDMENUITEM
      MENUITEM
        PROPERTIES
          Name                #BOM comparison
          MenuItemName        #InventBOMComparison_CN
        ENDPROPERTIES
        
      ENDMENUITEM
      MENUITEM
        PROPERTIES
          Name                #Inventory status
          MenuItemName        #InventStatusFormInPeriod_CN
        ENDPROPERTIES
        
      ENDMENUITEM
      MENUITEM
        PROPERTIES
          Name                #Inventory in/out status
          MenuItemName        #InventInOutStatusFormInPeriod_CN
        ENDPROPERTIES
        
      ENDMENUITEM
      MENU #@SYS334197
        PROPERTIES
          Name                #ItemHandling
          Label               #@SYS334197
        ENDPROPERTIES
        
        MENUITEM
          PROPERTIES
            Name                #Pallet transport handling
            MenuItemName        #WMSTransport
          ENDPROPERTIES
          
        ENDMENUITEM
      ENDMENU
      MENU #@SYS334198
        PROPERTIES
          Name                #Dimensions
          Label               #@SYS334198
        ENDPROPERTIES
        
        MENUITEM
          PROPERTIES
            Name                #Owner
            MenuItemName        #InventOwner_RU
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Batches
            MenuItemName        #InventBatch
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Serial numbers
            MenuItemName        #InventSerial
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Custom decl. numbers
            MenuItemName        #InventGTD_RU
          ENDPROPERTIES
          
        ENDMENUITEM
      ENDMENU
      MENU #@SYS334199
        PROPERTIES
          Name                #Transactions
          Label               #@SYS334199
        ENDPROPERTIES
        
        MENUITEM
          PROPERTIES
            Name                #Transactions
            MenuItemName        #InventTransVoucher
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Standard cost transactions
            MenuItemName        #InventCostTrans
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Postings
            MenuItemName        #InventTransPosting
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Inventory balance turnover
            MenuItemName        #InventTurnoverReport_RU
          ENDPROPERTIES
          
        ENDMENUITEM
      ENDMENU
      MENU #@SYS9020
        PROPERTIES
          Name                #Journals
          Label               #@SYS9020
          ConfigurationKey    #LogisticsBasic
          CountryRegionCodes  #RU,PL
        ENDPROPERTIES
        
        MENUITEM
          PROPERTIES
            Name                #Ext. inventory delivery note
            MenuItemName        #PLInventPackingSlipExtJour
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Certificate of unserviceability
            MenuItemName        #InventJournalRep_Loss_RU
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Transfer slip
            MenuItemName        #InventJournalRep_Transfer_RU
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Collation statement
            MenuItemName        #InventJournalRep_CountColl_RU
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Requirement slip
            MenuItemName        #InventJournalRep_BOMReq_RU
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Counting list (INV-3)
            MenuItemName        #InventJournalRep_CountingList_RU
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Counting list (INV-5)
            MenuItemName        #InventJournalRep_CountListBailee_RU
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Counting act (INV-6)
            MenuItemName        #InventJournalRep_CntLstInTransit_RU
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Printable documents
            MenuItemName        #PrintoutTable
          ENDPROPERTIES
          
        ENDMENUITEM
      ENDMENU
      MENU #@SYS334200
        PROPERTIES
          Name                #Forecast
          Label               #@SYS334200
        ENDPROPERTIES
        
        MENUITEM
          PROPERTIES
            Name                #Supply forecast
            MenuItemName        #ForecastPurchMenu
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Demand forecast
            MenuItemName        #ForecastSalesMenu
          ENDPROPERTIES
          
        ENDMENUITEM
      ENDMENU
      MENU #@SYS334201
        PROPERTIES
          Name                #QualityManagement
          Label               #@SYS334201
        ENDPROPERTIES
        
        MENUITEM
          PROPERTIES
            Name                #Certificate of analysis
            MenuItemName        #InventTestCertOfAnalysisTable
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Related operation items
            MenuItemName        #InventTestOperationItems
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Related operation charges
            MenuItemName        #InventTestOperationMiscCharges
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Related operation time sheets
            MenuItemName        #InventTestOperationTimeSheet
          ENDPROPERTIES
          
        ENDMENUITEM
      ENDMENU
      MENU #@SYS334202
        PROPERTIES
          Name                #TransferOrders
          Label               #@SYS334202
        ENDPROPERTIES
        
        MENUITEM
          PROPERTIES
            Name                #Picking list
            MenuItemName        #WMSPickingRoutesJournal
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Transfer order history
            MenuItemName        #InventTransferJour
          ENDPROPERTIES
          
        ENDMENUITEM
      ENDMENU
      MENU #@SYS334203
        PROPERTIES
          Name                #Rfid
          Label               #@SYS334203
        ENDPROPERTIES
        
        MENUITEM
          PROPERTIES
            Name                #RFID tag lookup
            MenuItemName        #RFIDTagValidator
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #RFID transactions
            MenuItemName        #RFIDTrans
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #RFID exceptions
            MenuItemName        #RFIDExceptions
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #RFID manager
            MenuItemName        #RFIDManager
          ENDPROPERTIES
          
        ENDMENUITEM
      ENDMENU
      MENU #@SYS191443
        PROPERTIES
          Name                #Batches
          Label               #@SYS191443
        ENDPROPERTIES
        
        MENUITEM
          PROPERTIES
            Name                #Batch disposition history
            MenuItemName        #PdsHistoryInventDisposition
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Shelf advice as of date
            MenuItemName        #PdsInventBatchShelfAdvice
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Shelf life as at date
            MenuItemName        #PdsInventBatchShelfLife
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Best before as of date
            MenuItemName        #PdsInventBatchBestBefore
          ENDPROPERTIES
          
        ENDMENUITEM
      ENDMENU
      MENU #@SYS4004867
        PROPERTIES
          Name                #Tracing
          Label               #@SYS4004867
        ENDPROPERTIES
        
        MENUITEM
          PROPERTIES
            Name                #Item tracing
            MenuItemName        #InventTrackingDimTracing
          ENDPROPERTIES
          
        ENDMENUITEM
      ENDMENU
      MENU #@SYS300202
        PROPERTIES
          Name                #Packaging
          Label               #@SYS300202
        ENDPROPERTIES
        
        MENUITEM
          PROPERTIES
            Name                #Multi dimension on-hand
            MenuItemName        #PmfMultiDimProcessInventory
          ENDPROPERTIES
          
        ENDMENUITEM
      ENDMENU
    ENDMENU
    MENU #@SYS333860
      PROPERTIES
        Name                #Reports
        Label               #@SYS333860
        NormalImage         #3477
        ImageLocation       #EmbeddedResource
      ENDPROPERTIES
      
      MENU #@SYS334245
        PROPERTIES
          Name                #PackingMaterial
          Label               #@SYS334245
        ENDPROPERTIES
        
        MENUITEM
          PROPERTIES
            Name                #Packing material weight - purchase
            MenuItemType        #Output
            MenuItemName        #InventPackingMaterialTransPurchReport
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Packing material weight - sales
            MenuItemType        #Output
            MenuItemName        #InventPackingMaterialTransSalesReport
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Packing material fee calculation
            MenuItemType        #Output
            MenuItemName        #InventPackingMaterialFeeCalc
          ENDPROPERTIES
          
        ENDMENUITEM
      ENDMENU
      MENUITEM
        PROPERTIES
          Name                #Stock card - Financial
          MenuItemType        #Output
          MenuItemName        #InventStockCardFinancial
        ENDPROPERTIES
        
      ENDMENUITEM
      MENUITEM
        PROPERTIES
          Name                #Stock card - Physical
          MenuItemType        #Output
          MenuItemName        #InventStockCardPhysical
        ENDPROPERTIES
        
      ENDMENUITEM
      MENU #@SYS334205
        PROPERTIES
          Name                #BaseData
          Label               #@SYS334205
        ENDPROPERTIES
        
        MENUITEM
          PROPERTIES
            Name                #Quantity setup
            MenuItemType        #Output
            MenuItemName        #InventTableQuantity
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Picking locations
            MenuItemType        #Output
            MenuItemName        #WMSPickingLocations
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Item prices
            MenuItemType        #Output
            MenuItemName        #InventPriceOverview
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Indirect cost rate and ratio
            MenuItemType        #Output
            MenuItemName        #IndirectCostOverview
          ENDPROPERTIES
          
        ENDMENUITEM
      ENDMENU
      MENU #@SYS334206
        PROPERTIES
          Name                #Transactions
          Label               #@SYS334206
        ENDPROPERTIES
        
        MENUITEM
          PROPERTIES
            Name                #Packing slip registration journal
            MenuItemType        #Output
            MenuItemName        #CustVendPackingSlipRegistration
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Inventory item card
            MenuItemType        #Output
            MenuItemName        #InventStdFormM17_RU
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Pay-sheet of receipts and expenditure
            MenuItemType        #Output
            MenuItemName        #InventIncomeOutlay_RU
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Adjustments
            MenuItemType        #Output
            MenuItemName        #InventSettlementAdjustment
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Adjustment (cur.)
            MenuItemType        #Output
            MenuItemName        #InventSettlementAdjSecCur_RU
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Shipment list
            MenuItemType        #Output
            MenuItemName        #WMSShipmentList
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Inventory movement
            MenuItemType        #Output
            MenuItemName        #InventMovement_TH
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Inventory journal
            MenuItemType        #Output
            MenuItemName        #InventPhysicalPerWarehouseTrans_IT
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Inventory picked not delivered
            MenuItemType        #Output
            MenuItemName        #MCRPickedNotDelivered
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Linked dimension validation
            MenuItemType        #Output
            MenuItemName        #InventSiteDimensionLinkValidation
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Inventory scrap statement
            MenuItemType        #Output
            MenuItemName        #InventScrapStatement
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Trade report
            MenuItemType        #Output
            MenuItemName        #InventReport_TORG29_RU
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Inventory movements in a period
            MenuItemType        #Output
            MenuItemName        #InventMovementsPeriodRpt
          ENDPROPERTIES
          
        ENDMENUITEM
      ENDMENU
      MENU #@SYS334207
        PROPERTIES
          Name                #On-hand
          Label               #@SYS334207
        ENDPROPERTIES
        
        MENUITEM
          PROPERTIES
            Name                #On-hand inventory
            MenuItemType        #Output
            MenuItemName        #InventOnhand
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Critical on-hand inventory
            MenuItemType        #Output
            MenuItemName        #InventSumCritical
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #CW on-hand
            MenuItemType        #Output
            MenuItemName        #PdsCWInventOnhand
          ENDPROPERTIES
          
        ENDMENUITEM
      ENDMENU
      MENU #@SYS334208
        PROPERTIES
          Name                #Status
          Label               #@SYS334208
        ENDPROPERTIES
        
        MENUITEM
          PROPERTIES
            Name                #Inventory by item group ageing
            MenuItemType        #Output
            MenuItemName        #InventAgeGroup
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Inventory by inventory dimension ageing
            MenuItemType        #Output
            MenuItemName        #InventAgeDim
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Items in quarantine
            MenuItemType        #Output
            MenuItemName        #InventQuarantineOrder
          ENDPROPERTIES
          
        ENDMENUITEM
        MENU #@SYS334209
          PROPERTIES
            Name                #PhysicalInventory
            Label               #@SYS334209
          ENDPROPERTIES
          
          MENUITEM
            PROPERTIES
              Name                #Physical inventory by inventory dimension
              MenuItemType        #Output
              MenuItemName        #InventDimPhys
            ENDPROPERTIES
            
          ENDMENUITEM
          MENUITEM
            PROPERTIES
              Name                #Inventory ageing
              MenuItemType        #Output
              MenuItemName        #InventAging
            ENDPROPERTIES
            
          ENDMENUITEM
        ENDMENU
        MENU #@SYS334210
          PROPERTIES
            Name                #InventoryValue
            Label               #@SYS334210
          ENDPROPERTIES
          
          MENUITEM
            PROPERTIES
              Name                #Inventory value statement with standard cost breakdowns
              MenuItemType        #Output
              MenuItemName        #InventCostValue
            ENDPROPERTIES
            
          ENDMENUITEM
          MENUITEM
            PROPERTIES
              Name                #Potential conflicts - inventory and general ledger
              MenuItemType        #Output
              MenuItemName        #InventLedgerConflict
            ENDPROPERTIES
            
          ENDMENUITEM
          MENUITEM
            PROPERTIES
              Name                #Inventory value
              MenuItemType        #Output
              MenuItemName        #InventValue
            ENDPROPERTIES
            
          ENDMENUITEM
          MENUITEM
            PROPERTIES
              Name                #Intercompany goods in transit totals
              MenuItemType        #Output
              MenuItemName        #InterCompanyGoodsInTransitTotals
            ENDPROPERTIES
            
          ENDMENUITEM
          MENUITEM
            PROPERTIES
              Name                #Intercompany goods in transit transactions
              MenuItemType        #Output
              MenuItemName        #InterCompanyGoodsInTransitTransactions
            ENDPROPERTIES
            
          ENDMENUITEM
          MENUITEM
            PROPERTIES
              Name                #Potential conflicts - work in progress and general ledger
              MenuItemType        #Output
              MenuItemName        #ProdWIPLedgerConflict
            ENDPROPERTIES
            
          ENDMENUITEM
        ENDMENU
        MENUITEM
          PROPERTIES
            Name                #Shelf advice as of date
            MenuItemType        #Output
            MenuItemName        #PdsInventBatchShelfAdviceReport
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Consignment stock transactions
            MenuItemType        #Output
            MenuItemName        #InventConsignmentReport_HU
          ENDPROPERTIES
          
        ENDMENUITEM
      ENDMENU
      MENU #@SYS334211
        PROPERTIES
          Name                #Analysis
          Label               #@SYS334211
        ENDPROPERTIES
        
        MENUITEM
          PROPERTIES
            Name                #ABC classification
            MenuItemType        #Output
            MenuItemName        #InventABC
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #ABC classification by location
            MenuItemType        #Output
            MenuItemName        #WMSABCAnalysis
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Fixed receipt price deviations
            MenuItemType        #Output
            MenuItemName        #InventStdCostVariance
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Variance analysis statement
            MenuItemType        #Output
            MenuItemName        #InventCostVariances
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Warehouse load utilisation
            MenuItemType        #Output
            MenuItemName        #WMSSpaceUtilizationDetail
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Workload capacity
            MenuItemType        #Output
            MenuItemName        #WMSWorkloadWebpart
          ENDPROPERTIES
          
        ENDMENUITEM
      ENDMENU
      MENU #@SYS334212
        PROPERTIES
          Name                #Statistics
          Label               #@SYS334212
        ENDPROPERTIES
        
        MENUITEM
          PROPERTIES
            Name                #Counting statistics
            MenuItemType        #Output
            MenuItemName        #InventCountStatistics
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Top sales order lines not shipped in full or not shipped on time
            MenuItemType        #Output
            MenuItemName        #TSSIFOTDetailed
          ENDPROPERTIES
          
        ENDMENUITEM
      ENDMENU
      MENU #@SYS334213
        PROPERTIES
          Name                #Price/discount
          Label               #@SYS334213
        ENDPROPERTIES
        
        MENUITEM
          PROPERTIES
            Name                #Base price/discount setup
            MenuItemType        #Output
            MenuItemName        #InventTablePriceDiscount
          ENDPROPERTIES
          
        ENDMENUITEM
      ENDMENU
      MENU #@SYS334214
        PROPERTIES
          Name                #BillsOfMaterials
          Label               #@SYS334214
        ENDPROPERTIES
        
        MENUITEM
          PROPERTIES
            Name                #Lines
            MenuItemType        #Output
            MenuItemName        #BOMConsistOfReport
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Where-used
            MenuItemType        #Output
            MenuItemName        #BOMPartOfReport
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Calculation
            MenuItemType        #Output
            MenuItemName        #BOMCalcTrans
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Formula calculation
            MenuItemType        #Output
            MenuItemName        #pmfFormulaCalcTrans
          ENDPROPERTIES
          
        ENDMENUITEM
      ENDMENU
      MENU #@SYS334215
        PROPERTIES
          Name                #QualityManagement
          Label               #@SYS334215
        ENDPROPERTIES
        
        MENUITEM
          PROPERTIES
            Name                #Non conformance
            MenuItemType        #Output
            MenuItemName        #InventNonConformanceTable
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Non conformance tag
            MenuItemType        #Output
            MenuItemName        #InventNonConformanceTag
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Corrections
            MenuItemType        #Output
            MenuItemName        #InventTestCorrection
          ENDPROPERTIES
          
        ENDMENUITEM
      ENDMENU
      MENU #@SYS334216
        PROPERTIES
          Name                #Labels
          Label               #@SYS334216
        ENDPROPERTIES
        
        MENUITEM
          PROPERTIES
            Name                #Location label
            MenuItemType        #Output
            MenuItemName        #WMSLocationLabel
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Pallet label
            MenuItemType        #Output
            MenuItemName        #WMSPalletNumberGenerated
          ENDPROPERTIES
          
        ENDMENUITEM
      ENDMENU
      MENU #@SYS334217
        PROPERTIES
          Name                #Forecast
          Label               #@SYS334217
        ENDPROPERTIES
        
        MENU #@SYS334219
          PROPERTIES
            Name                #DemandForecast
            Label               #@SYS334219
          ENDPROPERTIES
          
          MENUITEM
            PROPERTIES
              Name                #Demand forecast per item
              MenuItemType        #Output
              MenuItemName        #ForecastSalesItem
            ENDPROPERTIES
            
          ENDMENUITEM
        ENDMENU
      ENDMENU
      MENU #@SYS334220
        PROPERTIES
          Name                #TransferOrders
          Label               #@SYS334220
        ENDPROPERTIES
        
        MENUITEM
          PROPERTIES
            Name                #Receive
            MenuItemType        #Output
            MenuItemName        #InventTransferReceive
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Shipment
            MenuItemType        #Output
            MenuItemName        #InventTransferShip
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Transfer overview
            MenuItemType        #Output
            MenuItemName        #InventTransferOrderOverview
          ENDPROPERTIES
          
        ENDMENUITEM
      ENDMENU
      MENU #@GLS63261
        PROPERTIES
          Name                #AsiaReports
          Label               #@GLS63261
          ConfigurationKey    #LogisticsBasic
          CountryRegionCodes  #CN
        ENDPROPERTIES
        
        MENUITEM
          PROPERTIES
            Name                #Issue/receive summary report
            MenuItemType        #Output
            MenuItemName        #InventSummaryInPeriod_CN
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Inventory status report
            MenuItemType        #Output
            MenuItemName        #InventStatusInPeriod_CN
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Inventory in/out status report
            MenuItemType        #Output
            MenuItemName        #InventStatusInPeriodByType_CN
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Inventory ageing
            MenuItemType        #Output
            MenuItemName        #InventAging
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Tentative purchase inventory details
            MenuItemType        #Output
            MenuItemName        #InventTentativePurchInventoryDetails_CN
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Summary of tentative purchase inventory
            MenuItemType        #Output
            MenuItemName        #InventTentativePurchIvtSummary_CN
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Purchase GST details
            MenuItemType        #Output
            MenuItemName        #InventPurchaseVATDetails_CN
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Sales GST details
            MenuItemType        #Output
            MenuItemName        #InventSalesVATDetails_CN
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Item purchase history analysis
            MenuItemType        #Output
            MenuItemName        #InventItemPurchaseAnalysis_CN
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Item sales analysis
            MenuItemType        #Output
            MenuItemName        #InventItemSalesAnalysis_CN
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Purchase shipment analysis
            MenuItemType        #Output
            MenuItemName        #InventPurchaseShipmentAnalysis_CN
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Sales shipments analysis
            MenuItemType        #Output
            MenuItemName        #InventSalesShipmentAnalysis_CN
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Inventory voucher details (China)
            MenuItemType        #Output
            MenuItemName        #InventVoucherDetails_CN
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Sales shipment details
            MenuItemType        #Output
            MenuItemName        #InventSalesShipmentDetails_CN
          ENDPROPERTIES
          
        ENDMENUITEM
      ENDMENU
    ENDMENU
    MENU #@SYS333865
      PROPERTIES
        Name                #Periodic
        Label               #@SYS333865
        NormalImage         #3476
        ImageLocation       #EmbeddedResource
      ENDPROPERTIES
      
      MENUITEM
        PROPERTIES
          Name                #Closing and adjustment
          MenuItemName        #InventClosing
        ENDPROPERTIES
        
      ENDMENUITEM
      MENUITEM
        PROPERTIES
          Name                #Close and adjustment in currency
          MenuItemName        #InventClosingSecCur_RU
        ENDPROPERTIES
        
      ENDMENUITEM
      MENUITEM
        PROPERTIES
          Name                #Arrival overview
          MenuItemName        #WMSArrivalOverview
        ENDPROPERTIES
        
      ENDMENUITEM
      MENUITEM
        PROPERTIES
          Name                #Transfer orders
          MenuItemName        #InventTransferOrder
        ENDPROPERTIES
        
      ENDMENUITEM
      MENUITEM
        PROPERTIES
          Name                #Planned transfers
          MenuItemName        #ReqTransPoTransfer
        ENDPROPERTIES
        
      ENDMENUITEM
      MENUITEM
        PROPERTIES
          Name                #Release sales order picking
          MenuItemName        #SalesReleaseOrderPicking
        ENDPROPERTIES
        
      ENDMENUITEM
      MENUITEM
        PROPERTIES
          Name                #Release transfer order picking
          MenuItemName        #InventTransferReleaseOrderPicking
        ENDPROPERTIES
        
      ENDMENUITEM
      MENUITEM
        PROPERTIES
          Name                #Picking list registration
          MenuItemName        #WMSPickingRegistration
        ENDPROPERTIES
        
      ENDMENUITEM
      MENUITEM
        PROPERTIES
          Name                #Inventory blocking
          MenuItemName        #InventBlocking
        ENDPROPERTIES
        
      ENDMENUITEM
      MENUITEM
        PROPERTIES
          Name                #ABC classification
          MenuItemType        #Action
          MenuItemName        #InventABCUpdate
        ENDPROPERTIES
        
      ENDMENUITEM
      MENUITEM
        PROPERTIES
          Name                #Linked dimension update
          MenuItemType        #Action
          MenuItemName        #InventSiteDimensionUpdate
        ENDPROPERTIES
        
      ENDMENUITEM
      MENUITEM
        PROPERTIES
          Name                #On-hand inventory on date
          MenuItemType        #Action
          MenuItemName        #InventSumDateFinancialCalc_ClosedDate_RU
        ENDPROPERTIES
        
      ENDMENUITEM
      MENUITEM
        PROPERTIES
          Name                #Schedule load utilisation
          MenuItemType        #Action
          MenuItemName        #WMSSpaceUtilService
        ENDPROPERTIES
        
      ENDMENUITEM
      MENUITEM
        PROPERTIES
          Name                #Schedule workload
          MenuItemType        #Action
          MenuItemName        #WMSWorkLoadService
        ENDPROPERTIES
        
      ENDMENUITEM
      MENUITEM
        PROPERTIES
          Name                #Financially update pallet movements
          MenuItemType        #Action
          MenuItemName        #WMSPalletMovementFinancialUpdate
        ENDPROPERTIES
        
      ENDMENUITEM
      MENUITEM
        PROPERTIES
          Name                #Write off stock value
          MenuItemType        #Action
          MenuItemName        #ECL_WriteOffStockValue
        ENDPROPERTIES
        
      ENDMENUITEM
      MENU #@SYS334221
        PROPERTIES
          Name                #Shipments
          Label               #@SYS334221
        ENDPROPERTIES
        
        MENUITEM
          PROPERTIES
            Name                #Shipment staging
            MenuItemName        #WMSShipmentStaging
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Shipment reservation
            MenuItemType        #Action
            MenuItemName        #WMSShipmentReservationBatch
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Physical shipment update
            MenuItemType        #Action
            MenuItemName        #WMSShipmentPhysicalUpdBatchMulti
          ENDPROPERTIES
          
        ENDMENUITEM
      ENDMENU
      MENU #@SYS334222
        PROPERTIES
          Name                #TransferUpdate
          Label               #@SYS334222
        ENDPROPERTIES
        
        MENUITEM
          PROPERTIES
            Name                #Picking list
            MenuItemType        #Action
            MenuItemName        #InventTransferPick
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Ship transfer order
            MenuItemType        #Action
            MenuItemName        #InventTransferShip
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Receive
            MenuItemType        #Action
            MenuItemName        #InventTransferReceive
          ENDPROPERTIES
          
        ENDMENUITEM
      ENDMENU
      MENU #@SYS334223
        PROPERTIES
          Name                #BillsOfMaterials
          Label               #@SYS334223
        ENDPROPERTIES
        
        MENUITEM
          PROPERTIES
            Name                #Change BOM item
            MenuItemName        #BOMChangeItem
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Report as finished
            MenuItemType        #Action
            MenuItemName        #BOMReportFinished
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Costing versions
            MenuItemName        #CostingVersionPeriodic
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Recalculate BOM levels
            MenuItemType        #Action
            MenuItemName        #BOMLevelCalc
          ENDPROPERTIES
          
        ENDMENUITEM
      ENDMENU
      MENU #@SYS334224
        PROPERTIES
          Name                #QualityManagement
          Label               #@SYS334224
        ENDPROPERTIES
        
        MENUITEM
          PROPERTIES
            Name                #Quarantine orders
            MenuItemName        #InventQuarantineOrder
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Quality orders
            MenuItemName        #InventQualityOrderTable
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Non conformances
            MenuItemName        #InventNonConformanceTable
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Corrections
            MenuItemName        #InventTestCorrection
          ENDPROPERTIES
          
        ENDMENUITEM
      ENDMENU
      MENU #@SYS334225
        PROPERTIES
          Name                #Rfid
          Label               #@SYS334225
        ENDPROPERTIES
        
        MENUITEM
          PROPERTIES
            Name                #Get transactions
            MenuItemType        #Action
            MenuItemName        #RFIDGetTrans
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Process transactions
            MenuItemType        #Action
            MenuItemName        #RFIDBusinessProcessTrans
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Validate transactions
            MenuItemType        #Action
            MenuItemName        #RFIDValidateTrans
          ENDPROPERTIES
          
        ENDMENUITEM
      ENDMENU
      MENU #@SYS334226
        PROPERTIES
          Name                #Locations
          Label               #@SYS334226
        ENDPROPERTIES
        
        MENUITEM
          PROPERTIES
            Name                #Create refill
            MenuItemType        #Action
            MenuItemName        #WMSPickingLocationRefillCheck
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Sort codes
            MenuItemType        #Action
            MenuItemName        #WMSUpdateSortCodes
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Names and check texts
            MenuItemType        #Action
            MenuItemName        #WMSUpdateLocationName
          ENDPROPERTIES
          
        ENDMENUITEM
      ENDMENU
      MENU #@SYS334227
        PROPERTIES
          Name                #CleanUp
          Label               #@SYS334227
        ENDPROPERTIES
        
        MENUITEM
          PROPERTIES
            Name                #Summation of load adjustments
            MenuItemType        #Action
            MenuItemName        #WMSLocationLoadServiceSumUpLoad
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Inventory journals cleanup
            MenuItemType        #Action
            MenuItemName        #InventJournalCleanUp
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Inventory settlements cleanup
            MenuItemType        #Action
            MenuItemName        #InventCostCleanUp
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Inventory dimensions cleanup
            MenuItemType        #Action
            MenuItemName        #InventUnusedDimCleanUp
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Dimension inconsistency cleanup
            MenuItemType        #Action
            MenuItemName        #InventSiteInconsistencyCleanUp
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Cleanup on-hand inventory calculation on date
            MenuItemType        #Action
            MenuItemName        #InventSumDateFinancialCleanUp_RU
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #On-hand entries cleanup
            MenuItemType        #Action
            MenuItemName        #InventCleanUpTrackingInventSum
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Warehouse management on-hand entries cleanup
            MenuItemType        #Action
            MenuItemName        #InventCleanupWHSInventSum
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #On-hand entries aggregation by financial dimensions
            MenuItemType        #Action
            MenuItemName        #InventSumSummarize
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Pallet movement status
            MenuItemName        #wmspalletmovement
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Cost calculation details
            MenuItemType        #Action
            MenuItemName        #BOMCalcCleanUp
          ENDPROPERTIES
          
        ENDMENUITEM
      ENDMENU
      MENU #@SYS334228
        PROPERTIES
          Name                #Forecast
          Label               #@SYS334228
        ENDPROPERTIES
        
        MENUITEM
          PROPERTIES
            Name                #Revaluation for moving average
            MenuItemName        #InventAdjInventOnHandMovingAverage
          ENDPROPERTIES
          
        ENDMENUITEM
        MENU #@SYS334229
          PROPERTIES
            Name                #Entry
            Label               #@SYS334229
          ENDPROPERTIES
          
          MENUITEM
            PROPERTIES
              Name                #Items
              MenuItemName        #ForecastItem
            ENDPROPERTIES
            
          ENDMENUITEM
          MENUITEM
            PROPERTIES
              Name                #Item groups
              MenuItemName        #ForecastItemGroup
            ENDPROPERTIES
            
          ENDMENUITEM
          MENUITEM
            PROPERTIES
              Name                #Customers
              MenuItemName        #ForecastCust
            ENDPROPERTIES
            
          ENDMENUITEM
          MENUITEM
            PROPERTIES
              Name                #Customer groups
              MenuItemName        #ForecastCustGroup
            ENDPROPERTIES
            
          ENDMENUITEM
          MENUITEM
            PROPERTIES
              Name                #Vendors
              MenuItemName        #ForecastVend
            ENDPROPERTIES
            
          ENDMENUITEM
          MENUITEM
            PROPERTIES
              Name                #Vendor groups
              MenuItemName        #ForecastVendGroup
            ENDPROPERTIES
            
          ENDMENUITEM
        ENDMENU
        MENU #@SYS334230
          PROPERTIES
            Name                #Update
            Label               #@SYS334230
          ENDPROPERTIES
          
          MENUITEM
            PROPERTIES
              Name                #Purchase budget to ledger
              MenuItemType        #Action
              MenuItemName        #ForecastPurch2Ledger
            ENDPROPERTIES
            
          ENDMENUITEM
          MENUITEM
            PROPERTIES
              Name                #Sales budget to ledger
              MenuItemType        #Action
              MenuItemName        #ForecastSales2Ledger
            ENDPROPERTIES
            
          ENDMENUITEM
          MENUITEM
            PROPERTIES
              Name                #Update purchase and sales budget
              MenuItemType        #Action
              MenuItemName        #ForecastUpdate
            ENDPROPERTIES
            
          ENDMENUITEM
          MENUITEM
            PROPERTIES
              Name                #Import forecast
              MenuItemType        #Action
              MenuItemName        #ForecastDMPImport
            ENDPROPERTIES
            
          ENDMENUITEM
        ENDMENU
      ENDMENU
      MENU #@GLS5005
        PROPERTIES
          Name                #Excise
          Label               #@GLS5005
        ENDPROPERTIES
        
        MENUITEM
          PROPERTIES
            Name                #Update excise registers
            MenuItemType        #Action
            MenuItemName        #UpdateExciseRegistersInventory_IN
          ENDPROPERTIES
          
        ENDMENUITEM
      ENDMENU
      MENUITEM
        PROPERTIES
          Name                #Revaluation for moving average
          MenuItemName        #InventAdjInventOnHandMovingAverage
        ENDPROPERTIES
        
      ENDMENUITEM
      MENU #@PRO1017
        PROPERTIES
          Name                #Formulas
          Label               #@PRO1017
          ConfigurationKey    #PMF
        ENDPROPERTIES
        
        MENUITEM
          PROPERTIES
            Name                #Change formula item
            MenuItemName        #PmfFormulaChangeItem
          ENDPROPERTIES
          
        ENDMENUITEM
      ENDMENU
      MENU #@PDS353
        PROPERTIES
          Name                #CommodityPricing
          Label               #@PDS353
          ConfigurationKey    #PdsCommodity
        ENDPROPERTIES
        
        MENUITEM
          PROPERTIES
            Name                #Pricing calculation
            MenuItemName        #PdsComdPricingRun
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Create price and margin data
            MenuItemType        #Action
            MenuItemName        #PdsComdPricingMarginUpdate
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Price margin update
            MenuItemName        #PdsComdPricingMargin
          ENDPROPERTIES
          
        ENDMENUITEM
      ENDMENU
      MENU #@SYS54381
        PROPERTIES
          Name                #Batches
          Label               #@SYS54381
        ENDPROPERTIES
        
        MENUITEM
          PROPERTIES
            Name                #Generate inspection orders
            MenuItemType        #Action
            MenuItemName        #PdsGenerateInspectionOrders
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Update best before dates
            MenuItemType        #Action
            MenuItemName        #PdsUpdateBestBefore
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Update expiry dates
            MenuItemType        #Action
            MenuItemName        #PdsUpdateExpDate
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Update shelf advice dates
            MenuItemType        #Action
            MenuItemName        #PdsUpdateShelfAdvice
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Validate batch status
            MenuItemType        #Action
            MenuItemName        #PdsValidateBatchStatus
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Update batch disposition status
            MenuItemType        #Action
            MenuItemName        #PdsUpdateDispositionStatus
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #All batch merges
            MenuItemName        #InventBatchJournalListPage
            IsDisplayedInContentArea    #Yes
          ENDPROPERTIES
          
        ENDMENUITEM
      ENDMENU
      MENU #@MCR11316
        PROPERTIES
          Name                #PickingWorkbench
          Label               #@MCR11316
        ENDPROPERTIES
        
        MENUITEM
          PROPERTIES
            Name                #Picking workbench
            MenuItemType        #Action
            MenuItemName        #MCRPickingWorkbenchBatch
          ENDPROPERTIES
          
        ENDMENUITEM
      ENDMENU
      MENU #@SYP4860408
        PROPERTIES
          Name                #GateManagement
          Label               #@SYP4860408
          CountryRegionCodes  #IN
        ENDPROPERTIES
        
        MENUITEM
          PROPERTIES
            Name                #All inward gate entries
            MenuItemName        #InventSiteInwardGateEntryListPage_IN
            IsDisplayedInContentArea    #Yes
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #All outward gate entries
            MenuItemName        #InventSiteOutwardGateEntryListPage_IN
            IsDisplayedInContentArea    #Yes
          ENDPROPERTIES
          
        ENDMENUITEM
      ENDMENU
    ENDMENU
    MENU #@SYS333869
      PROPERTIES
        Name                #Setup
        Label               #@SYS333869
        NormalImage         #3478
        ImageLocation       #EmbeddedResource
      ENDPROPERTIES
      
      MENUITEM
        PROPERTIES
          Name                #Inventory and warehouse management parameters
          MenuItemName        #InventParameters
        ENDPROPERTIES
        
      ENDMENUITEM
      MENUITEM
        PROPERTIES
          Name                #By-product
          MenuItemName        #InventByProductTable_RU
        ENDPROPERTIES
        
      ENDMENUITEM
      MENUITEM
        PROPERTIES
          Name                #Assign fiscal document types
          MenuItemName        #FiscalEstablishmentFiscalDocumentType_BR
        ENDPROPERTIES
        
      ENDMENUITEM
      MENU #@SYS334231
        PROPERTIES
          Name                #Costing
          Label               #@SYS334231
        ENDPROPERTIES
        
        MENUITEM
          PROPERTIES
            Name                #Costing versions
            MenuItemName        #CostingVersion
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Cost groups
            MenuItemName        #BOMCostGroup
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Calculation groups
            MenuItemName        #BOMCalcGroup
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Costing sheets
            MenuItemName        #CostSheetDesigner
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Standard cost conversions
            MenuItemName        #InventStdCostConv
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Standard cost conversions in currency
            MenuItemName        #InventStdCostConvSecCur_RU
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Inventory value reports
            MenuItemName        #InventValueReportSetup
          ENDPROPERTIES
          
        ENDMENUITEM
      ENDMENU
      MENU #@SYS334232
        PROPERTIES
          Name                #Dimensions
          Label               #@SYS334232
        ENDPROPERTIES
        
        MENUITEM
          PROPERTIES
            Name                #Number groups
            MenuItemName        #InventNumGroup
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Inventory profiles
            MenuItemName        #InventProfile_RU
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Kinds of activity
            MenuItemName        #InventProfileTypeSetup_RU
          ENDPROPERTIES
          
        ENDMENUITEM
      ENDMENU
      MENU #@SYS334233
        PROPERTIES
          Name                #Price/discount
          Label               #@SYS334233
        ENDPROPERTIES
        
        MENUITEM
          PROPERTIES
            Name                #Item discount groups
            MenuItemName        #PriceDiscGroup_Invent
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Customer price/discount groups
            MenuItemName        #PriceDiscGroup_Cust
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Vendor price/discount groups
            MenuItemName        #PriceDiscGroup_Vend
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Item price tolerance groups
            MenuItemName        #InventItemPriceToleranceGroup
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Attribute-based pricing details
            MenuItemName        #PDSCalculationTable
          ENDPROPERTIES
          
        ENDMENUITEM
      ENDMENU
      MENU #@SYS334234
        PROPERTIES
          Name                #Misc.Charges
          Label               #@SYS334234
        ENDPROPERTIES
        
        MENUITEM
          PROPERTIES
            Name                #Charges code
            MenuItemName        #MarkupTable
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Item charge groups
            MenuItemName        #MarkupGroup_Invent
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Customer charge groups
            MenuItemName        #MarkupGroup_Cust
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Vendor charges group
            MenuItemName        #MarkupGroup_Vend
          ENDPROPERTIES
          
        ENDMENUITEM
      ENDMENU
      MENU #@SYS334235
        PROPERTIES
          Name                #SupplementaryItems
          Label               #@SYS334235
        ENDPROPERTIES
        
        MENUITEM
          PROPERTIES
            Name                #Supplementary item - item groups
            MenuItemName        #SuppItemGroup_Invent
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Supplementary item - customer groups
            MenuItemName        #SuppItemGroup_Cust
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Supplementary item - vendor groups
            MenuItemName        #SuppItemGroup_Vend
          ENDPROPERTIES
          
        ENDMENUITEM
      ENDMENU
      MENU #@SYS334236
        PROPERTIES
          Name                #Distribution
          Label               #@SYS334236
        ENDPROPERTIES
        
        MENUITEM
          PROPERTIES
            Name                #Transport
            MenuItemName        #CustVendTransportPoint2Point
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Fallback warehouse for site
            MenuItemName        #InventFallbackWarehouse
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Activate order entry deadline combinations
            MenuItemName        #InventOrderEntryDeadlineParameters
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Order entry deadline groups
            MenuItemName        #InventOrderEntryDeadlineGroup
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Order entry deadlines
            MenuItemName        #InventOrderEntryDeadlineTable
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Outbound rules
            MenuItemName        #WMSOutboundRule
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Shipment templates
            MenuItemName        #WMSShipmentTemplate
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Shipment reservation sequences
            MenuItemName        #WMSReservationSequence
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Shipment reservation combinations
            MenuItemName        #WMSReservationCombination
          ENDPROPERTIES
          
        ENDMENUITEM
      ENDMENU
      MENU #@SYS334237
        PROPERTIES
          Name                #Inventory
          Label               #@SYS334237
        ENDPROPERTIES
        
        MENUITEM
          PROPERTIES
            Name                #Item groups
            MenuItemName        #InventItemGroup
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Item model groups
            MenuItemName        #InventModelGroup
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Inventory value reports
            MenuItemName        #InventValueReportSetup
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Buyer groups
            MenuItemName        #InventBuyerGroup
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Counting groups
            MenuItemName        #InventCountGroup
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Blocking causes
            MenuItemName        #WMSBlockingCause
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Financial LIFO reporting group
            MenuItemName        #InventFiscalLIFOGroup
          ENDPROPERTIES
          
        ENDMENUITEM
      ENDMENU
      MENU #@SYS334238
        PROPERTIES
          Name                #InventoryBreakdown
          Label               #@SYS334238
        ENDPROPERTIES
        
        MENUITEM
          PROPERTIES
            Name                #Sites
            MenuItemName        #InventSite
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Warehouses
            MenuItemName        #InventLocations
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Inventory aisles
            MenuItemName        #WMSAisle
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Store areas
            MenuItemName        #WMSStoreArea
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Store zones
            MenuItemName        #WMSStoreZone
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Inventory locations
            MenuItemName        #WMSLocation
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Inventory site gate
            MenuItemName        #InventSiteGate_IN
          ENDPROPERTIES
          
        ENDMENUITEM
      ENDMENU
      MENU #@GLS180534
        PROPERTIES
          Name                #Warehousereports
          Label               #@GLS180534
        ENDPROPERTIES
        
        MENUITEM
          PROPERTIES
            Name                #Space utilisation
            MenuItemName        #WMSSpaceUtilSetup
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Workload capacity
            MenuItemName        #WMSWorkloadCapacity
          ENDPROPERTIES
          
        ENDMENUITEM
      ENDMENU
      MENU #@SYS334239
        PROPERTIES
          Name                #InventoryEquipment
          Label               #@SYS334239
        ENDPROPERTIES
        
        MENUITEM
          PROPERTIES
            Name                #Pallets
            MenuItemName        #WMSPallet
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Pallet types
            MenuItemName        #WMSPalletType
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Pallet type groups
            MenuItemName        #WMSPalletTypeGroup
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Forklift
            MenuItemName        #WMSForkLift
          ENDPROPERTIES
          
        ENDMENUITEM
      ENDMENU
      MENU #@SYS334240
        PROPERTIES
          Name                #BillsOfMaterials
          Label               #@SYS334240
        ENDPROPERTIES
        
        MENUITEM
          PROPERTIES
            Name                #Configuration groups
            MenuItemName        #ConfigGroup
          ENDPROPERTIES
          
        ENDMENUITEM
      ENDMENU
      MENU #@SYS334241
        PROPERTIES
          Name                #Rfid
          Label               #@SYS334241
        ENDPROPERTIES
        
        MENUITEM
          PROPERTIES
            Name                #RFID servers
            MenuItemName        #RFIDServerTable
          ENDPROPERTIES
          
        ENDMENUITEM
      ENDMENU
      MENU #@SYS334242
        PROPERTIES
          Name                #QualityControl
          Label               #@SYS334242
        ENDPROPERTIES
        
        MENUITEM
          PROPERTIES
            Name                #Test instruments
            MenuItemName        #InventTestInstrument
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Tests
            MenuItemName        #InventTestTable
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Test variables
            MenuItemName        #InventTestVariable
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Test groups
            MenuItemName        #InventTestGroup
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Quality associations
            MenuItemName        #InventTestAssociationTable
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Quality groups
            MenuItemName        #InventTestQualityGroup
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Item quality groups
            MenuItemName        #InventTestItemQualityGroup
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Item sampling
            MenuItemName        #InventItemSampling
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Workers responsible for quality
            MenuItemName        #InventTestEmplResponsible
          ENDPROPERTIES
          
        ENDMENUITEM
      ENDMENU
      MENU #@SYS334243
        PROPERTIES
          Name                #QualityManagement
          Label               #@SYS334243
        ENDPROPERTIES
        
        MENUITEM
          PROPERTIES
            Name                #Diagnostic types
            MenuItemName        #InventTestDiagnosticType
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Quality charges
            MenuItemName        #InventTestMiscCharges
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Operations
            MenuItemName        #InventTestOperation
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Problem types
            MenuItemName        #InventProblemType
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Quarantine zones
            MenuItemName        #InventQuarantineZone
          ENDPROPERTIES
          
        ENDMENUITEM
      ENDMENU
      MENU #@SYS334244
        PROPERTIES
          Name                #Journals
          Label               #@SYS334244
        ENDPROPERTIES
        
        MENUITEM
          PROPERTIES
            Name                #Journal names, inventory
            MenuItemName        #InventJournalName
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Journal names, warehouse management
            MenuItemName        #WMSJournalName
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Journal names, Financial LIFO
            MenuItemName        #InventFiscalLIFOJournalName
          ENDPROPERTIES
          
        ENDMENUITEM
      ENDMENU
      MENU #@SYS334245
        PROPERTIES
          Name                #PackingMaterial
          Label               #@SYS334245
        ENDPROPERTIES
        
        MENUITEM
          PROPERTIES
            Name                #Packing groups
            MenuItemName        #InventPackagingGroup
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Return packages
            MenuItemName        #PlInventPackageTable
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Packing material codes
            MenuItemName        #InventPackagingMaterialCode
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Packing units
            MenuItemName        #InventPackagingUnit
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Packing material fees
            MenuItemName        #InventPackagingMaterialFee
          ENDPROPERTIES
          
        ENDMENUITEM
      ENDMENU
      MENU #@SYS334246
        PROPERTIES
          Name                #Posting
          Label               #@SYS334246
        ENDPROPERTIES
        
        MENUITEM
          PROPERTIES
            Name                #Posting
            MenuItemName        #InventPosting
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Inventory profile - posting profile
            MenuItemName        #InventProfileCustVendLedger_RU
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Transaction combinations
            MenuItemName        #InventPostingParameters
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Dimension link
            MenuItemName        #InventSiteDimensionLink
          ENDPROPERTIES
          
        ENDMENUITEM
      ENDMENU
      MENU #@SYS334247
        PROPERTIES
          Name                #Forecast
          Label               #@SYS334247
        ENDPROPERTIES
        
        MENUITEM
          PROPERTIES
            Name                #Forecast models
            MenuItemName        #ForecastModel
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Item allocation keys
            MenuItemName        #ForecastItemAllocation
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Period allocation categories
            MenuItemName        #ForecastLedgerAllocateKey
          ENDPROPERTIES
          
        ENDMENUITEM
      ENDMENU
      MENU #@GLS56
        PROPERTIES
          Name                #FiscalInformation_BR
          Label               #@GLS56
          CountryRegionCodes  #BR
        ENDPROPERTIES
        
        MENUITEM
          PROPERTIES
            Name                #Product type
            MenuItemName        #InventProductTypeTable_BR
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Fiscal classification codes
            MenuItemName        #TaxFiscalClassification_BR
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Service code
            MenuItemName        #TaxServiceCode_BR
          ENDPROPERTIES
          
        ENDMENUITEM
      ENDMENU
      MENU #@SYS334248
        PROPERTIES
          Name                #ShippingCarrier
          Label               #@SYS334248
        ENDPROPERTIES
        
        MENUITEM
          PROPERTIES
            Name                #Carrier interface
            MenuItemName        #ShipCarrierInterface
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Carrier company
            MenuItemName        #ShipCarrierCompany
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Carrier IDs
            MenuItemName        #ShipCarrierTable
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Carrier role users
            MenuItemName        #ShipCarrierSQLRoleUser
          ENDPROPERTIES
          
        ENDMENUITEM
      ENDMENU
      MENU #@GLS61428
        PROPERTIES
          Name                #EXIM_IN
          Label               #@GLS61428
          CountryRegionCodes  #IN
        ENDPROPERTIES
        
        MENUITEM
          PROPERTIES
            Name                #Product groups
            MenuItemName        #EximProductGroupTable_IN
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #SION
            MenuItemName        #EximSionTable_IN
          ENDPROPERTIES
          
        ENDMENUITEM
      ENDMENU
      MENU #@GLS114698
        PROPERTIES
          Name                #CustomPayments_RU
          Label               #@GLS114698
        ENDPROPERTIES
        
        MENUITEM
          PROPERTIES
            Name                #Customs counteragents
            MenuItemName        #CustomPartners_RU
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Customs offices
            MenuItemName        #CustomPosts_RU
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #TN VED codes
            MenuItemName        #FEACCTable_RU
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Indicative prices of TN VED
            MenuItemName        #FEACCIndicativePrice_RU
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Item relation with TN VED
            MenuItemName        #FEACCInventTable_RU
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #TN VED code relation with customs payment
            MenuItemName        #FEACCCustomRateTable_RU
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Misc. charges relation with terms of delivery
            MenuItemName        #MarkupDlvTermConnection_RU
          ENDPROPERTIES
          
        ENDMENUITEM
      ENDMENU
      MENU #@PDS353
        PROPERTIES
          Name                #CommodityPricing
          Label               #@PDS353
          ConfigurationKey    #PdsCommodity
        ENDPROPERTIES
        
        MENUITEM
          PROPERTIES
            Name                #Cost basis type
            MenuItemName        #PdsCostBasis
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Pricing template
            MenuItemName        #PdsComdPricingTemplate
          ENDPROPERTIES
          
        ENDMENUITEM
      ENDMENU
      MENU #@PRO175
        PROPERTIES
          Name                #BatchDisposition
          Label               #@PRO175
        ENDPROPERTIES
        
        MENUITEM
          PROPERTIES
            Name                #Batch disposition master
            MenuItemName        #PdsDispositionMaster
          ENDPROPERTIES
          
        ENDMENUITEM
      ENDMENU
      MENU #@PRO1588
        PROPERTIES
          Name                #BatchAttributes
          Label               #@PRO1588
        ENDPROPERTIES
        
        MENUITEM
          PROPERTIES
            Name                #Batch attributes
            MenuItemName        #PdsBatchAttrib
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Batch attribute groups
            MenuItemName        #PdsBatchAttribGroup
          ENDPROPERTIES
          
        ENDMENUITEM
      ENDMENU
      MENU #@PRO1115
        PROPERTIES
          Name                #Formula
          Label               #@PRO1115
          ConfigurationKey    #PMF
        ENDPROPERTIES
        
        MENUITEM
          PROPERTIES
            Name                #Plan groups
            MenuItemName        #PmfPlanGroup
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Bulk item conversion
            MenuItemName        #PmfBulkItemConv
          ENDPROPERTIES
          
        ENDMENUITEM
      ENDMENU
      MENU #@PDS641
        PROPERTIES
          Name                #MRC
          Label               #@PDS641
          ConfigurationKey    #PdsMRC
        ENDPROPERTIES
        
        MENUITEM
          PROPERTIES
            Name                #Restricted products regional lists
            MenuItemName        #PdsMRCRestrictionList
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Regulated products regional lists
            MenuItemName        #PdsMRCReportingList
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Product safety data sheet
            MenuItemName        #PdsMRCValidityIntervalByCountry
          ENDPROPERTIES
          
        ENDMENUITEM
      ENDMENU
      MENU #@SYS4002797
        PROPERTIES
          Name                #AlcoholDeclaration
          Label               #@SYS4002797
          CountryRegionCodes  #RU
        ENDPROPERTIES
        
        MENUITEM
          PROPERTIES
            Name                #Alcohol production types
            MenuItemName        #AlcoholProductionType_RU
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Alcohol activity kinds
            MenuItemName        #AlcoholActivityKind_RU
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Alcohol licenses
            MenuItemName        #AlcoholLicenseTable_RU
          ENDPROPERTIES
          
        ENDMENUITEM
      ENDMENU
      MENU #@MCR11316
        PROPERTIES
          Name                #Pickingworkbench
          Label               #@MCR11316
          ConfigurationKey    #LogisticsBasic
        ENDPROPERTIES
        
        MENUITEM
          PROPERTIES
            Name                #Workbench profiles
            MenuItemName        #MCRPickingWorkbenchProfile
          ENDPROPERTIES
          
        ENDMENUITEM
      ENDMENU
      MENU #@MCR21886
        PROPERTIES
          Name                #BoxingLogic
          Label               #@MCR21886
          SetCompany          #Yes
        ENDPROPERTIES
        
        MENUITEM
          PROPERTIES
            Name                #Box definitions
            MenuItemName        #MCRPackingboxTable
          ENDPROPERTIES
          
        ENDMENUITEM
      ENDMENU
    ENDMENU
  ENDMENU
  

***Element: PRN

; Microsoft Dynamics AX Project : ECL_PerfAuditOnhandInvCleanupCU13 unloaded
; --------------------------------------------------------------------------------
  PROJECTVERSION 2
  
  PROJECT #ECL_PerfAuditOnhandInvCleanupCU13
  SHARED
  PROPERTIES
    Name                #ECL_PerfAuditOnhandInvCleanupCU13
    Origin              #{4006EBAD-4C44-4058-917B-4B6698F43F77}
  ENDPROPERTIES
  
    PROJECTCLASS ProjectNode
    GROUP #Queries
      PROPERTIES
        Name                #Queries
        ProjectGroupType    #Queries
        GroupMask           #
        PreventEditProperties #No
      ENDPROPERTIES
      
      BEGINNODE
        FILETYPE 0
        UTILTYPE 20
        UTILOBJECTID 0
        NODETYPE 330
        NAME #InventCleanupWHSInventSum
      ENDNODE
      BEGINNODE
        FILETYPE 0
        UTILTYPE 20
        UTILOBJECTID 0
        NODETYPE 330
        NAME #InventCleanupAllClosedInventSum
      ENDNODE
      BEGINNODE
        FILETYPE 0
        UTILTYPE 20
        UTILOBJECTID 0
        NODETYPE 330
        NAME #InventCleanupTrackingInventSum
      ENDNODE
      ENDGROUP
      
    GROUP #Classes
      PROPERTIES
        Name                #Classes
        ProjectGroupType    #Classes
        GroupMask           #
        PreventEditProperties #No
      ENDPROPERTIES
      
      BEGINNODE
        FILETYPE 0
        UTILTYPE 45
        UTILOBJECTID 1024490
        NODETYPE 329
        NAME #InventSumSummarizeContract
      ENDNODE
      BEGINNODE
        FILETYPE 0
        UTILTYPE 45
        UTILOBJECTID 1024491
        NODETYPE 329
        NAME #InventSumSummarizeController
      ENDNODE
      BEGINNODE
        FILETYPE 0
        UTILTYPE 45
        UTILOBJECTID 1024492
        NODETYPE 329
        NAME #InventSumSummarizeService
      ENDNODE
      BEGINNODE
        FILETYPE 0
        UTILTYPE 45
        UTILOBJECTID 1028832
        NODETYPE 329
        NAME #InventCleanupAllClosedInventSumContract
      ENDNODE
      BEGINNODE
        FILETYPE 0
        UTILTYPE 45
        UTILOBJECTID 1028833
        NODETYPE 329
        NAME #InventCleanupAllClosedInventSumService
      ENDNODE
      BEGINNODE
        FILETYPE 0
        UTILTYPE 45
        UTILOBJECTID 1028834
        NODETYPE 329
        NAME #InventCleanupAllCloseInventSumController
      ENDNODE
      BEGINNODE
        FILETYPE 0
        UTILTYPE 45
        UTILOBJECTID 1028835
        NODETYPE 329
        NAME #InventCleanupInventSumContract
      ENDNODE
      BEGINNODE
        FILETYPE 0
        UTILTYPE 45
        UTILOBJECTID 1028836
        NODETYPE 329
        NAME #InventCleanupInventSumService
      ENDNODE
      BEGINNODE
        FILETYPE 0
        UTILTYPE 45
        UTILOBJECTID 1015036
        NODETYPE 329
        NAME #InventCleanupTrackingInventSumContract
      ENDNODE
      BEGINNODE
        FILETYPE 0
        UTILTYPE 45
        UTILOBJECTID 1015037
        NODETYPE 329
        NAME #InventCleanupTrackingInventSumController
      ENDNODE
      BEGINNODE
        FILETYPE 0
        UTILTYPE 45
        UTILOBJECTID 1015038
        NODETYPE 329
        NAME #InventCleanupTrackingInventSumService
      ENDNODE
      BEGINNODE
        FILETYPE 0
        UTILTYPE 45
        UTILOBJECTID 1028837
        NODETYPE 329
        NAME #InventCleanupWHSInventSumContract
      ENDNODE
      BEGINNODE
        FILETYPE 0
        UTILTYPE 45
        UTILOBJECTID 1028838
        NODETYPE 329
        NAME #InventCleanupWHSInventSumController
      ENDNODE
      BEGINNODE
        FILETYPE 0
        UTILTYPE 45
        UTILOBJECTID 1028839
        NODETYPE 329
        NAME #InventCleanupWHSInventSumService
      ENDNODE
      ENDGROUP
      
    GROUP #Action
      PROPERTIES
        Name                #Action
        ProjectGroupType    #Action
        GroupMask           #
        PreventEditProperties #No
      ENDPROPERTIES
      
      BEGINNODE
        FILETYPE 0
        UTILTYPE 3
        UTILOBJECTID 0
        NODETYPE 296
        NAME #InventCleanupWHSInventSum
      ENDNODE
      BEGINNODE
        FILETYPE 0
        UTILTYPE 3
        UTILOBJECTID 0
        NODETYPE 296
        NAME #InventCleanupTrackingInventSum
      ENDNODE
      BEGINNODE
        FILETYPE 0
        UTILTYPE 3
        UTILOBJECTID 0
        NODETYPE 296
        NAME #InventSumSummarize
      ENDNODE
      ENDGROUP
      
    GROUP #Menus
      PROPERTIES
        Name                #Menus
        ProjectGroupType    #Menus
        GroupMask           #
        PreventEditProperties #No
      ENDPROPERTIES
      
      BEGINNODE
        FILETYPE 0
        UTILTYPE 16
        UTILOBJECTID 0
        NODETYPE 205
        NAME #InventoryManagement
      ENDNODE
      ENDGROUP
      
  ENDPROJECT
  

***Element: CLS

; Microsoft Dynamics AX Class: InventSumReCalcItem unloaded
; --------------------------------------------------------------------------------
  CLSVERSION 1
  
  CLASS #InventSumReCalcItem
    PROPERTIES
      Name                #InventSumReCalcItem
      RunOn               #Server
      Origin              #{2D1300EF-0000-1000-041A-B3A605B45258}
      LegacyId            #239
    ENDPROPERTIES
    
    METHODS
      SOURCE #checkInventSum
        #protected void checkInventSum(
        #    InventSum   _sumUpdated,
        #    InventSum   _sumCalculated)
        #{
        #    if (_sumUpdated.PostedQty      != _sumCalculated.PostedQty)
        #    {
        #        this.insertError(strfmt("@SYS18761", _sumCalculated.InventDimId, _sumCalculated.PostedQty, _sumUpdated.PostedQty));
        #    }
        #
        #    //ECL_PerfAuditOnhandInvCleanupCU13_IC, Slow onhand calculation, dtrunin, 30.10.2020 -->
        #    //if (_sumUpdated.RecId )
        #    //check only if we have a record, as due to summarize these value can be different
        #    //ECL_PerfAuditOnhandInvCleanupCU13_IC, Slow onhand calculation, dtrunin, 30.10.2020 <--
        #    /*
        #    {
        #        if (_sumUpdated.PostedValue    != _sumCalculated.PostedValue)
        #        {
        #            this.insertError(strfmt("@SYS18762", _sumCalculated.InventDimId, _sumCalculated.PostedValue, _sumUpdated.PostedValue));
        #        }
        #
        #        if (_sumUpdated.PhysicalValue    != _sumCalculated.PhysicalValue)
        #        {
        #            this.insertError(strfmt("@SYS54228", _sumCalculated.InventDimId, _sumCalculated.PhysicalValue, _sumUpdated.PhysicalValue));
        #        }
        #    }
        #    */
        #
        #    if (_sumUpdated.Deducted  != _sumCalculated.Deducted)
        #    {
        #        this.insertError(strfmt("@SYS18763", _sumCalculated.InventDimId, _sumCalculated.Deducted, _sumUpdated.Deducted));
        #    }
        #
        #    if (_sumUpdated.Picked  != _sumCalculated.Picked)
        #    {
        #        this.insertError(strfmt("@SYS54229", _sumCalculated.InventDimId, _sumCalculated.Picked, _sumUpdated.Picked));
        #    }
        #
        #    if (_sumUpdated.Received   != _sumCalculated.Received)
        #    {
        #        this.insertError(strfmt("@SYS18764", _sumCalculated.InventDimId, _sumCalculated.Received, _sumUpdated.Received));
        #    }
        #
        #    if (_sumUpdated.Registered  != _sumCalculated.Registered)
        #    {
        #        this.insertError(strfmt("@SYS54230", _sumCalculated.InventDimId, _sumCalculated.Registered, _sumUpdated.Registered));
        #    }
        #
        #    if (_sumUpdated.ReservPhysical != _sumCalculated.ReservPhysical)
        #    {
        #        this.insertError(strfmt("@SYS18765", _sumCalculated.InventDimId, _sumCalculated.ReservPhysical, _sumUpdated.ReservPhysical));
        #    }
        #
        #    if (_sumUpdated.ReservOrdered   != _sumCalculated.ReservOrdered)
        #    {
        #        this.insertError(strfmt("@SYS18766", _sumCalculated.InventDimId, _sumCalculated.ReservOrdered, _sumUpdated.ReservOrdered));
        #    }
        #
        #    if (_sumUpdated.Ordered   != _sumCalculated.Ordered)
        #    {
        #        this.insertError(strfmt("@SYS18767", _sumCalculated.InventDimId, _sumCalculated.Ordered, _sumUpdated.Ordered));
        #    }
        #
        #    if (_sumUpdated.OnOrder  != _sumCalculated.OnOrder)
        #    {
        #        this.insertError(strfmt("@SYS18768", _sumCalculated.InventDimId, _sumCalculated.OnOrder, _sumUpdated.OnOrder));
        #    }
        #
        #    if (_sumUpdated.QuotationIssue != _sumCalculated.QuotationIssue)
        #    {
        #        this.insertError(strfmt("@SYS18769", _sumCalculated.InventDimId, _sumCalculated.QuotationIssue, _sumUpdated.QuotationIssue));
        #    }
        #
        #    if (_sumUpdated.QuotationReceipt != _sumCalculated.QuotationReceipt)
        #    {
        #        this.insertError(strfmt("@SYS18770", _sumCalculated.InventDimId, _sumCalculated.QuotationReceipt, _sumUpdated.QuotationReceipt));
        #    }
        #    if (pdsIsCWItem(_sumCalculated.ItemId))
        #    {
        #        if (_sumUpdated.PdsCWPostedQty      != _sumCalculated.PdsCWPostedQty)
        #        {
        #            this.insertError(strfmt("@PDS309",
        #                                 _sumCalculated.InventDimId,
        #                                 _sumCalculated.PdsCWPostedQty,
        #                                 _sumUpdated.PdsCWPostedQty));
        #        }
        #
        #        if (_sumUpdated.PdsCWDeducted  != _sumCalculated.PdsCWDeducted)
        #        {
        #            this.insertError(strfmt("@PDS319",
        #                                 _sumCalculated.InventDimId,
        #                                 _sumCalculated.PdsCWDeducted,
        #                                 _sumUpdated.PdsCWDeducted));
        #        }
        #
        #        if (_sumUpdated.PdsCWPicked  != _sumCalculated.PdsCWPicked)
        #        {
        #            this.insertError(strfmt("@PDS310",
        #                                 _sumCalculated.InventDimId,
        #                                 _sumCalculated.PdsCWPicked,
        #                                 _sumUpdated.PdsCWPicked));
        #        }
        #
        #        if (_sumUpdated.PdsCWReceived   != _sumCalculated.PdsCWReceived)
        #        {
        #            this.insertError(strfmt("@PDS311",
        #                                 _sumCalculated.InventDimId,
        #                                 _sumCalculated.PdsCWReceived,
        #                                 _sumUpdated.PdsCWReceived));
        #        }
        #
        #        if (_sumUpdated.PdsCWRegistered  != _sumCalculated.PdsCWRegistered)
        #        {
        #            this.insertError(strfmt("@PDS312",
        #                                 _sumCalculated.InventDimId,
        #                                 _sumCalculated.PdsCWRegistered,
        #                                 _sumUpdated.PdsCWRegistered));
        #        }
        #
        #        if (_sumUpdated.PdsCWReservPhysical != _sumCalculated.PdsCWReservPhysical)
        #        {
        #            this.insertError(strfmt("@PDS313",
        #                                 _sumCalculated.InventDimId,
        #                                 _sumCalculated.PdsCWReservPhysical,
        #                                 _sumUpdated.PdsCWReservPhysical));
        #        }
        #
        #        if (_sumUpdated.PdsCWReservOrdered   != _sumCalculated.PdsCWReservOrdered)
        #        {
        #            this.insertError(strfmt("@PDS314",
        #                                 _sumCalculated.InventDimId,
        #                                 _sumCalculated.PdsCWReservOrdered,
        #                                 _sumUpdated.PdsCWReservOrdered));
        #        }
        #
        #        if (_sumUpdated.PdsCWOrdered   != _sumCalculated.PdsCWOrdered)
        #        {
        #            this.insertError(strfmt("@PDS315",
        #                                 _sumCalculated.InventDimId,
        #                                 _sumCalculated.PdsCWOrdered,
        #                                 _sumUpdated.PdsCWOrdered));
        #        }
        #
        #        if (_sumUpdated.PdsCWOnOrder  != _sumCalculated.PdsCWOnOrder)
        #        {
        #            this.insertError(strfmt("@PDS316",
        #                                 _sumCalculated.InventDimId,
        #                                 _sumCalculated.PdsCWOnOrder,
        #                                 _sumUpdated.PdsCWOnOrder));
        #        }
        #
        #        if (_sumUpdated.PdsCWQuotationIssue != _sumCalculated.PdsCWQuotationIssue)
        #        {
        #            this.insertError(strfmt("@PDS317",
        #                                 _sumCalculated.InventDimId,
        #                                 _sumCalculated.PdsCWQuotationIssue,
        #                                 _sumUpdated.PdsCWQuotationIssue));
        #
        #        }
        #
        #        if (_sumUpdated.PdsCWQuotationReceipt != _sumCalculated.PdsCWQuotationReceipt)
        #        {
        #            this.insertError(strfmt("@PDS318",
        #                                 _sumCalculated.InventDimId,
        #                                 _sumCalculated.PdsCWQuotationReceipt,
        #                                 _sumUpdated.PdsCWQuotationReceipt));
        #
        #        }
        #    }
        #
        #    if (!mustCheckPallets)
        #    {
        #        if (_sumCalculated.inventDim().wmsPalletId)
        #        {
        #            mustCheckPallets = true;
        #        }
        #    }
        #}
      ENDSOURCE
      SOURCE #checkPallets
        #protected void checkPallets()
        #{
        #    InventSum       inventSum;
        #    InventDim       inventDim;
        #    WMSPallet       wmsPallet;
        #
        #    while select InventLocationId, wmsLocationId, wmsPalletId from inventDim
        #        group by InventLocationId, wmsLocationId, wmsPalletId
        #        where inventDim.wmsPalletId != ''
        #        join #inventSumFields from inventSum
        #            where inventSum.ItemId      == itemId
        #               && inventSum.InventDimId == inventDim.InventDimId
        #    {
        #        if (inventSum.physicalInventCalculated() != 0)
        #        {
        #            wmsPallet = WMSPallet::find(inventDim.wmsPalletId);
        #            if (!wmsPallet)
        #            {
        #                checkFailed(strFmt("@SYS60578", inventDim.wmsPalletId));
        #                return;
        #            }
        #
        #            if (wmsPallet.InventLocationId != inventDim.InventLocationId || wmsPallet.wmsLocationId != inventDim.wmsLocationId)
        #            {
        #                checkFailed(strFmt("@SYS60579",
        #                    inventDim.wmsPalletId, inventDim.InventLocationId, inventDim.wmsLocationId), '', SysInfoAction_TableField::newBuffer(wmsPallet));
        #            }
        #        }
        #    }
        #}
      ENDSOURCE
      SOURCE #checkWHSInventReserve
        #private void checkWHSInventReserve(
        #    WHSInventReserve   _inventReserveReadFromDB,
        #    WHSInventReserve   _inventReserveCalculated)
        #{
        #    this.checkWHSInventReserveField(_inventReserveReadFromDB, _inventReserveCalculated, fieldNum(WHSInventReserve, AvailOrdered));
        #    this.checkWHSInventReserveField(_inventReserveReadFromDB, _inventReserveCalculated, fieldNum(WHSInventReserve, AvailPhysical));
        #    this.checkWHSInventReserveField(_inventReserveReadFromDB, _inventReserveCalculated, fieldNum(WHSInventReserve, ReservOrdered));
        #    this.checkWHSInventReserveField(_inventReserveReadFromDB, _inventReserveCalculated, fieldNum(WHSInventReserve, ReservPhysical));
        #}
      ENDSOURCE
      SOURCE #checkWHSInventReserveField
        #private void checkWHSInventReserveField(
        #    WHSInventReserve   _inventReserveReadFromDB,
        #    WHSInventReserve   _inventReserveCalculated,
        #    fieldId            _fieldIdCheck)
        #{
        #    if (_inventReserveReadFromDB.(_fieldIdCheck) != _inventReserveCalculated.(_fieldIdCheck))
        #    {
        #        this.insertError(strfmt("@SYP4884090",_inventReserveCalculated.InventDimId, fieldId2name(tableNum(WHSInventReserve), _fieldIdCheck), tableId2name(tableNum(WHSInventReserve)), _inventReserveCalculated.(_fieldIdCheck), _inventReserveReadFromDB.(_fieldIdCheck)));
        #    }
        #}
      ENDSOURCE
      SOURCE #classDeclaration
        #class InventSumReCalcItem
        #{
        #    ItemId              itemId;
        #
        #    RecordSortedList    cacheInventSum;
        #    RecordSortedList    whsInventReserveCache;
        #
        #    Integer             errorQty;
        #    Integer             sumQty;
        #    boolean             showErrors;
        #    CheckFix            checkFix;
        #
        #    boolean             mustInventBeControlled;
        #    boolean             mustCheckPallets;
        #    boolean             isItemWHSEnabled;
        #}
      ENDSOURCE
      SOURCE #deleteInventSum
        #protected void deleteInventSum()
        #{
        #    InventSum       inventSum;
        #
        #    if (showErrors)
        #    {
        #        if ( (select firstonly RecId from inventSum where inventSum.ItemId == itemId).RecId)
        #        {
        #            this.insertError(strFmt("@SYS78132",InventTable::find(itemId).ItemType));
        #        }
        #    }
        #
        #    if (checkFix == CheckFix::Fix)
        #    {
        #        delete_from inventSum
        #            where inventSum.ItemId == itemId;
        #    }
        #}
      ENDSOURCE
      SOURCE #initNewWHSInventReserveFromDelta
        #private WHSInventReserve initNewWHSInventReserveFromDelta(WHSInventReserveDelta _whsInventReserveDelta)
        #{
        #    WHSInventReserve whsInventReserve;
        #
        #    whsInventReserve.addInventReserveDelta(_whsInventReserveDelta);
        #    whsInventReserve.ItemId         = _whsInventReserveDelta.ItemId;
        #    whsInventReserve.InventDimId    = _whsInventReserveDelta.InventDimId;
        #    whsInventReserve.HierarchyLevel = _whsInventReserveDelta.HierarchyLevel;
        #
        #    return whsInventReserve;
        #}
      ENDSOURCE
      SOURCE #insertAndCheckWHSInventReserveFromDelta
        #private void insertAndCheckWHSInventReserveFromDelta(ItemId _itemId)
        #{
        #    WHSInventReserve        whsInventReserve;
        #    WHSInventReserveDelta   whsInventReserveDelta;
        #
        #    while select #WHSInventReserveSumFields from whsInventReserveDelta
        #    group by ItemId, InventDimId, HierarchyLevel
        #        where whsInventReserveDelta.ItemId == _itemId
        #        &&    whsInventReserveDelta.TTSId  == this.ttsId()
        #    {
        #        this.testWHSInventReserve(this.initNewWHSInventReserveFromDelta(whsInventReserveDelta));
        #    }
        #
        #    //do a setbased insert after we checked to reduce the number of inserts
        #    if (checkFix == CheckFix::Fix)
        #    {
        #        //if we get a duplicate key exception here then it means that we must have created a record that did not exist when we started processing but was inserted by another process during our processing.
        #        insert_recordSet WHSInventReserve(itemId, InventDimId, HierarchyLevel, availPhysical, availOrdered, reservPhysical, reservOrdered)
        #            select itemId, InventDimId, HierarchyLevel, sum(availPhysical), sum(availOrdered), sum(reservPhysical), sum(reservOrdered) from whsInventReserveDelta
        #        group by ItemId, InventDimId, HierarchyLevel
        #            where whsInventReserveDelta.ItemId == _itemId
        #            &&    whsInventReserveDelta.TTSId  == this.ttsId();
        #    }
        #
        #    //we always need to delete the deltas we created
        #    delete_from whsInventReserveDelta
        #        where whsInventReserveDelta.ItemId == _itemId
        #        &&    whsInventReserveDelta.TTSId  == this.ttsId();
        #}
      ENDSOURCE
      SOURCE #insertError
        #protected void insertError(str 254 txt)
        #{
        #    errorQty  += 1;
        #    setPrefix(strFmt("@SYS14077", itemId) );
        #    checkFailed(txt);
        #}
      ENDSOURCE
      SOURCE #insertIntoWHSInventReserveCache
        #private void insertIntoWHSInventReserveCache(WHSInventReserve _whsInventReserve)
        #{
        #    whsInventReserveCache.ins(_whsInventReserve);
        #}
      ENDSOURCE
      SOURCE #insertWHSInventReserveDelta
        #private void insertWHSInventReserveDelta(
        #    InventSum _inventSum,
        #    boolean   _transTypeOnlyAffectsLocationAndBelow)
        #{
        #    InventSumDelta inventSumDelta;
        #
        #    inventSumDelta.initFromInventSum(_inventSum);
        #    inventSumDelta.ItemId = _inventSum.itemId;
        #    inventSumDelta.InventDimId = _inventSum.InventDimId;
        #    inventSumDelta.TTSId = this.ttsId();
        #
        #    WHSInventOnHand::insertWHSInventReserveDeltaFromAggrSum(inventSumDelta, _transTypeOnlyAffectsLocationAndBelow);
        #}
      ENDSOURCE
      SOURCE #insertWHSInventReserveDeltaSums
        #private void insertWHSInventReserveDeltaSums(
        #    ItemId          _itemId,
        #    InventDimId     _inventDimId,
        #    InventSum       _inventSumWHSLocationAndBelow,
        #    InventSum       _inventSumWHSAllLevels)
        #{
        #    _inventSumWHSLocationAndBelow.ItemId = _itemId;
        #    _inventSumWHSLocationAndBelow.inventDimId = _inventDimId;
        #    this.insertWHSInventReserveDelta(_inventSumWHSLocationAndBelow, true);
        #    _inventSumWHSLocationAndBelow.clear();
        #
        #    _inventSumWHSAllLevels.ItemId = _itemId;
        #    _inventSumWHSAllLevels.inventDimId = _inventDimId;
        #    this.insertWHSInventReserveDelta(_inventSumWHSAllLevels, false);
        #    _inventSumWHSAllLevels.clear();
        #}
      ENDSOURCE
      SOURCE #isItemWHSEnabled
        #private boolean isItemWHSEnabled()
        #{
        #    return isItemWHSEnabled;
        #}
      ENDSOURCE
      SOURCE #loadCurrentInventSum
        #protected void loadCurrentInventSum()
        #{
        #    InventSum inventSum;
        #
        #    while select forupdate inventSum
        #        where inventSum.ItemId == itemId
        #    {
        #        cacheInventSum.ins(inventSum);
        #
        #        if (checkFix == CheckFix::Fix)
        #        {
        #            inventSum.delete();
        #        }
        #    }
        #
        #    //always load WHSInvetnReserve to correct inconsistencies where sums should not exist for an item
        #    this.loadCurrentWHSInventReserve();
        #}
      ENDSOURCE
      SOURCE #loadCurrentWHSInventReserve
        #private void loadCurrentWHSInventReserve()
        #{
        #    WHSInventReserve whsInventReserve;
        #
        #    while select forupdate whsInventReserve
        #        where whsInventReserve.ItemId == itemId
        #    {
        #        if (showErrors)
        #        {
        #            this.insertIntoWHSInventReserveCache(whsInventReserve);
        #        }
        #
        #        if (checkFix == CheckFix::Fix)
        #        {
        #            //If somebody is trying to update the on-hand for the item while we process, we will have an X lock on the records, including the top most level which should prevent updates to existing records or inserts for the item
        #            whsInventReserve.delete();
        #        }
        #    }
        #}
      ENDSOURCE
      SOURCE #new
        #public void new(
        #    ItemId      _itemId,
        #    boolean     _showErrors     = true,
        #    CheckFix    _checkFix       = CheckFix::Fix)
        #{
        #    itemId      = _itemId;
        #    showErrors  = _showErrors;
        #    checkFix    = _checkFix;
        #
        #    if (!InventTable::checkExist(itemId))
        #    {
        #        throw error("@SYS18447");
        #    }
        #
        #    cacheInventSum = new RecordSortedList(tableNum(InventSum));
        #    cacheInventSum.sortOrder(fieldNum(InventSum,ItemId),fieldNum(InventSum,InventDimId));
        #
        #    mustInventBeControlled = InventTable::find(itemId).inventItemType().mustInventBeControlled();
        #
        #    isItemWHSEnabled = WHSInventEnabled::exist(itemId);
        #
        #    whsInventReserveCache = new RecordSortedList(tableNum(WHSInventReserve));
        #    whsInventReserveCache.sortOrder(fieldNum(WHSInventReserve,ItemId), fieldNum(WHSInventReserve,InventDimId));
        #}
      ENDSOURCE
      SOURCE #numberOfErrors
        #public Integer numberOfErrors()
        #{
        #    return errorQty;
        #}
      ENDSOURCE
      SOURCE #searchRemainInventSum
        #protected void searchRemainInventSum()
        #{
        #    InventSum       inventSum;
        #    InventSum       inventSumCurrent;
        #
        #    inventSum.clear();
        #    inventSumCurrent.clear();
        #
        #    if (showErrors)
        #    {
        #        if (cacheInventSum.first(inventSumCurrent))
        #        do
        #        {
        #            this.checkInventSum(inventSumCurrent,inventSum);
        #
        #        } while (cacheInventSum.next(inventSumCurrent));
        #
        #        if (this.isItemWHSEnabled())
        #        {
        #            this.searchRemainWHSInventReserve();
        #        }
        #    }
        #}
      ENDSOURCE
      SOURCE #searchRemainWHSInventReserve
        #/// <summary>
        #/// Reports errors for any records that are left in the cache since these were the ones that existed before the check but was not re-created.
        #/// </summary>
        #private void searchRemainWHSInventReserve()
        #{
        #    WHSInventReserve       whsInventReserveEmpty;
        #    WHSInventReserve       whsInventReserveCurrent;
        #
        #    if (showErrors)
        #    {
        #        if (whsInventReserveCache.first(whsInventReserveCurrent))
        #        do
        #        {
        #            this.checkWHSInventReserve(whsInventReserveCurrent,whsInventReserveEmpty);
        #
        #        } while (whsInventReserveCache.next(whsInventReserveCurrent));
        #    }
        #}
      ENDSOURCE
      SOURCE #testSum
        #protected void testSum(InventSum _inventSum)
        #{
        #    InventSum inventSumCurrent;
        #
        #    inventSumCurrent.ItemId         = _inventSum.ItemId;
        #    inventSumCurrent.InventDimId    = _inventSum.InventDimId;
        #
        #    cacheInventSum.find(inventSumCurrent);
        #
        #    if (showErrors)
        #    {
        #       this.checkInventSum(inventSumCurrent,_inventSum);
        #    }
        #
        #    cacheInventSum.del(inventSumCurrent);
        #}
      ENDSOURCE
      SOURCE #testWHSInventReserve
        #private void testWHSInventReserve(WHSInventReserve _whsInventReserveCalculated)
        #{
        #    WHSInventReserve whsInventReserveCurrent;
        #
        #    if (showErrors)
        #    {
        #        whsInventReserveCurrent.ItemId         = _whsInventReserveCalculated.ItemId;
        #        whsInventReserveCurrent.InventDimId    = _whsInventReserveCalculated.InventDimId;
        #
        #        whsInventReserveCache.find(whsInventReserveCurrent);
        #
        #        this.checkWHSInventReserve(whsInventReserveCurrent, _whsInventReserveCalculated);
        #
        #        whsInventReserveCache.del(whsInventReserveCurrent);
        #    }
        #}
      ENDSOURCE
      SOURCE #ttsId
        #private CreatedTransactionId ttsId()
        #{
        #    return appl.inventUpdateOnhandGlobal().inventUpdateOnhand().ttsId();
        #}
      ENDSOURCE
      SOURCE #updateActualInventSum
        #protected void updateActualInventSum()
        #{
        #    InventTrans     inventTransStatus;
        #    InventSum       inventSum;
        #    InventDimId     lastDimId;
        #    boolean         ok;
        #    InventSum           inventSumWHSLocationAndBelow, inventSumWHSAllLevels;
        #    InventTransOrigin   inventTransOrigin;
        #
        #    if (mustInventBeControlled)
        #    {
        #        if (#PdsCatchWeightEnabled)
        #        {
        #            if (this.isItemWHSEnabled())
        #            {
        #                select
        #                    sum(PdsCWQty),
        #                    sum(Qty),
        #                    sum(CostAmountPosted),
        #                    sum(CostAmountAdjustment),
        #                    // <GEERU>
        #                    sum(CostAmountSecCurPosted_RU),
        #                    sum(CostAmountSecCurAdjustment_RU),
        #                    sum(CostAmountSecCurPhysical_RU),
        #                    // </GEERU>
        #                    sum(CostAmountPhysical)
        #                    from inventTransStatus
        #                group by inventTransStatus.ItemId, inventTransStatus.InventDimId, inventTransOrigin.ReferenceCategory, inventTransStatus.StatusReceipt, inventTransStatus.StatusIssue, inventTransStatus.DatePhysical,inventTransStatus.DateInvent, inventTransStatus.DateExpected
        #                    where inventTransStatus.ItemId == itemId
        #                join ReferenceCategory from inventTransOrigin //we need to handle transtypes that only effect location and below specially
        #                        where inventTransOrigin.recId == inventTransStatus.InventTransOrigin;
        #            }
        #            else
        #            {
        #                select
        #                    sum(PdsCWQty),
        #                    sum(Qty),
        #                    sum(CostAmountPosted),
        #                    sum(CostAmountAdjustment),
        #                    // <GEERU>
        #                    sum(CostAmountSecCurPosted_RU),
        #                    sum(CostAmountSecCurAdjustment_RU),
        #                    sum(CostAmountSecCurPhysical_RU),
        #                    // </GEERU>
        #                    sum(CostAmountPhysical)
        #                    from inventTransStatus
        #                    group by ItemId,InventDimId,StatusReceipt,StatusIssue,DatePhysical,DateInvent,DateExpected
        #                    where inventTransStatus.ItemId == itemId;
        #            }
        #        }
        #        else
        #        {
        #            if (this.isItemWHSEnabled())
        #            {
        #                select
        #                    sum(Qty),
        #                    sum(CostAmountPosted),
        #                    sum(CostAmountAdjustment),
        #                    // <GEERU>
        #                    sum(CostAmountSecCurPosted_RU),
        #                    sum(CostAmountSecCurAdjustment_RU),
        #                    sum(CostAmountSecCurPhysical_RU),
        #                    // </GEERU>
        #                    sum(CostAmountPhysical)
        #                    from inventTransStatus
        #                group by inventTransStatus.ItemId, inventTransStatus.InventDimId, inventTransOrigin.ReferenceCategory, inventTransStatus.StatusReceipt, inventTransStatus.StatusIssue, inventTransStatus.DatePhysical,inventTransStatus.DateInvent, inventTransStatus.DateExpected
        #                    where inventTransStatus.ItemId == itemId
        #                join ReferenceCategory from inventTransOrigin //we need to handle transtypes that only effect location and below specially
        #                    where inventTransOrigin.recId == inventTransStatus.InventTransOrigin;
        #            }
        #            else
        #            {
        #                select
        #                    sum(Qty),
        #                    sum(CostAmountPosted),
        #                    sum(CostAmountAdjustment),
        #                    // <GEERU>
        #                    sum(CostAmountSecCurPosted_RU),
        #                    sum(CostAmountSecCurAdjustment_RU),
        #                    sum(CostAmountSecCurPhysical_RU),
        #                    // </GEERU>
        #                    sum(CostAmountPhysical)
        #                    from inventTransStatus
        #                    group by ItemId,InventDimId,StatusReceipt,StatusIssue,DatePhysical,DateInvent,DateExpected
        #                    where inventTransStatus.ItemId == itemId;
        #            }
        #        }
        #
        #        while (inventTransStatus)
        #        {
        #            if (ok)
        #            {
        #                if (inventTransStatus.InventDimId != lastDimId)
        #                {
        #                    inventSum.ItemId        = itemId;
        #                    inventSum.InventDimId   = lastDimId;
        #
        #                    if (this.isItemWHSEnabled())
        #                    {
        #                        this.insertWHSInventReserveDeltaSums(itemId, lastDimId, inventSumWHSLocationAndBelow, inventSumWHSAllLevels);
        #                    }
        #
        #                    if (checkFix == CheckFix::Fix)
        #                    {
        #                        inventSum.insert();
        #                    }
        #                    this.testSum(inventSum);
        #
        #                    inventSum.clear();
        #                }
        #            }
        #            else
        #            {
        #                ok = true;
        #            }
        #
        #            lastDimId       = inventTransStatus.InventDimId;
        #            inventSum.addInventTransQtyOnSum(inventTransStatus);
        #            if (inventTransStatus.StatusReceipt != StatusReceipt::None)
        #            {
        #                inventSum.addInventTransDatesOnSum(inventTransStatus);
        #            }
        #            inventSum.addInventTransValuesOnSum(inventTransStatus);
        #
        #            if (this.isItemWHSEnabled())
        #            {
        #                if (WHSInvent::transTypeOnlyAffectsLocationAndBelow(inventTransOrigin.ReferenceCategory))
        #                {
        #                    //we only care about quantities for the WHS updates
        #                    inventSumWHSLocationAndBelow.addInventTransQtyOnSum(inventTransStatus);
        #                    inventSumWHSLocationAndBelow.setAvailFields();
        #                }
        #                else
        #                {
        #                    //we only care about quantities for the WHS updates
        #                    inventSumWHSAllLevels.addInventTransQtyOnSum(inventTransStatus);
        #                    inventSumWHSAllLevels.setAvailFields();
        #                }
        #            }
        #            next inventTransStatus;
        #        }
        #    }
        #
        #    //handle the last iteration
        #    if (ok)
        #    {
        #        inventSum.ItemId        = itemId;
        #        inventSum.InventDimId   = lastDimId;
        #
        #        if (this.isItemWHSEnabled())
        #        {
        #            this.insertWHSInventReserveDeltaSums(itemId, lastDimId, inventSumWHSLocationAndBelow, inventSumWHSAllLevels);
        #        }
        #
        #        if (checkFix == CheckFix::Fix)
        #        {
        #            inventSum.insert();
        #        }
        #        this.testSum(inventSum);
        #
        #        //we need to do this when are done with all the processing of the transactions since a transaction can result in inserts of multiple WHSInventReserveDelta records with the same dimId
        #        this.insertAndCheckWHSInventReserveFromDelta(ItemId);
        #    }
        #
        #
        #
        #}
        #
        #
        #
      ENDSOURCE
      SOURCE #updateNow
        #public void updateNow()
        #{
        #    #OCCRetryCount
        #
        #    try
        #    {
        #        ttsbegin;
        #
        #        if (mustInventBeControlled)
        #        {
        #            this.loadCurrentInventSum();
        #            this.updateActualInventSum();
        #            this.searchRemainInventSum();
        #
        #            if (showErrors && mustCheckPallets)
        #            {
        #                this.checkPallets();
        #            }
        #        }
        #        else
        #        {
        #            this.deleteInventSum();
        #        }
        #
        #        ttscommit;
        #    }
        #    catch (Exception::Deadlock)
        #    {
        #        retry;
        #    }
        #    catch (Exception::UpdateConflict)
        #    {
        #        if (appl.ttsLevel() == 0)
        #        {
        #            if (xSession::currentRetryCount() >= #RetryNum)
        #            {
        #                throw Exception::UpdateConflictNotRecovered;
        #            }
        #            else
        #            {
        #                retry;
        #            }
        #        }
        #        else
        #        {
        #            throw Exception::UpdateConflict;
        #        }
        #    }
        #}
      ENDSOURCE
    ENDMETHODS
  ENDCLASS

***Element: PRN

; Microsoft Dynamics AX Project : ECL_PerfAuditOnhandInvCleanupCU13_IC unloaded
; --------------------------------------------------------------------------------
  PROJECTVERSION 2
  
  PROJECT #ECL_PerfAuditOnhandInvCleanupCU13_IC
  SHARED
  PROPERTIES
    Name                #ECL_PerfAuditOnhandInvCleanupCU13_IC
    Origin              #{2504970D-D1EC-4F82-ADCD-361DC602DF10}
  ENDPROPERTIES
  
    PROJECTCLASS ProjectNode
    GROUP #Classes
      PROPERTIES
        Name                #Classes
        ProjectGroupType    #Classes
        GroupMask           #
        PreventEditProperties #No
      ENDPROPERTIES
      
      BEGINNODE
        FILETYPE 0
        UTILTYPE 45
        UTILOBJECTID 239
        NODETYPE 329
        NAME #InventSumReCalcItem
      ENDNODE
      ENDGROUP
      
  ENDPROJECT
  

***Element: END
